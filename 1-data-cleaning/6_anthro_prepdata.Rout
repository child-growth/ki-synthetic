
R version 4.0.4 (2021-02-15) -- "Lost Library Book"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> #-----------------------------------
> # Stunting analysis
> # Objective 1a
> # Import data, subset to relevant variables
> #-----------------------------------
> rm(list=ls())
> source(paste0(here::here(), "/0-config.R"))
── Attaching packages ─────────────────────────────────────── tidyverse 1.3.0 ──
✔ ggplot2 3.3.2     ✔ purrr   0.3.4
✔ tibble  3.1.0     ✔ dplyr   1.0.5
✔ tidyr   1.1.1     ✔ stringr 1.4.0
✔ readr   1.3.1     ✔ forcats 0.5.0
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
here() starts at /home/andrew.mertens/ki-synthetic

Attaching package: ‘gridExtra’

The following object is masked from ‘package:dplyr’:

    combine


Attaching package: ‘reshape2’

The following object is masked from ‘package:tidyr’:

    smiths

Loading required package: Matrix

Attaching package: ‘Matrix’

The following objects are masked from ‘package:tidyr’:

    expand, pack, unpack

Loading 'metafor' package (version 2.4-0). For an overview 
and introduction to the package please type: help(metafor).

Attaching package: ‘data.table’

The following objects are masked from ‘package:reshape2’:

    dcast, melt

The following objects are masked from ‘package:dplyr’:

    between, first, last

The following object is masked from ‘package:purrr’:

    transpose

Loading required package: viridisLite

Attaching package: ‘maps’

The following object is masked from ‘package:purrr’:

    map


Attaching package: ‘assertthat’

The following object is masked from ‘package:tibble’:

    has_name

Loading required package: nlme

Attaching package: ‘nlme’

The following object is masked from ‘package:dplyr’:

    collapse

This is mgcv 1.8-31. For overview type 'help("mgcv-package")'.

Attaching package: ‘lazyeval’

The following objects are masked from ‘package:purrr’:

    is_atomic, is_formula


Attaching package: ‘rlang’

The following objects are masked from ‘package:lazyeval’:

    as_name, call_modify, call_standardise, expr_label, expr_text,
    f_env, f_env<-, f_label, f_lhs, f_lhs<-, f_rhs, f_rhs<-, f_text,
    is_atomic, is_call, is_formula, is_lang, is_pairlist, missing_arg

The following object is masked from ‘package:assertthat’:

    has_name

The following object is masked from ‘package:data.table’:

    :=

The following objects are masked from ‘package:purrr’:

    %@%, as_function, flatten, flatten_chr, flatten_dbl, flatten_int,
    flatten_lgl, flatten_raw, invoke, list_along, modify, prepend,
    splice


Attaching package: ‘scales’

The following object is masked from ‘package:viridis’:

    viridis_pal

The following object is masked from ‘package:purrr’:

    discard

The following object is masked from ‘package:readr’:

    col_factor


Attaching package: ‘foreach’

The following objects are masked from ‘package:purrr’:

    accumulate, when

Loading required package: iterators
Loading required package: parallel
Loading required package: survival

Attaching package: ‘survey’

The following object is masked from ‘package:graphics’:

    dotchart

Loading required package: bit

Attaching package: ‘bit’

The following object is masked from ‘package:data.table’:

    setattr

The following object is masked from ‘package:base’:

    xor

Attaching package bit64
package:bit64 (c) 2011-2017 Jens Oehlschlaegel
creators: integer64 runif64 seq :
coercion: as.integer64 as.vector as.logical as.integer as.double as.character as.bitstring
logical operator: ! & | xor != == < <= >= >
arithmetic operator: + - * / %/% %% ^
math: sign abs sqrt log log2 log10
math: floor ceiling trunc round
querying: is.integer64 is.vector [is.atomic} [length] format print str
values: is.na is.nan is.finite is.infinite
aggregation: any all min max range sum prod
cumulation: diff cummin cummax cumsum cumprod
access: length<- [ [<- [[ [[<-
combine: c rep cbind rbind as.data.frame
WARNING don't use as subscripts
WARNING semantics differ from integer
for more help type ?bit64

Attaching package: ‘bit64’

The following objects are masked from ‘package:base’:

    :, %in%, is.double, match, order, rank


Attaching package: ‘zoo’

The following objects are masked from ‘package:base’:

    as.Date, as.Date.numeric

Warning messages:
1: package ‘tidyverse’ was built under R version 4.0.5 
2: package ‘rlang’ was built under R version 4.0.5 
> 
> 
> #Function to drop correct trial arms
> drop_int_arms <- function(d){
+   d <- d %>%
+     filter(!(studyid=="JiVitA-4" & tr!="Control") &
+            !(studyid=="JiVitA-3" & tr!="Control") &
+            !(studyid=="PROBIT" & tr!="Control") &
+             !(studyid=="iLiNS-Zinc" & tr!="Control") &
+             !(studyid=="SAS-CompFeed" & tr!="Control") &
+             !(studyid=="COHORTS" & tr=="Other"))
+   
+   
+   # if(length(which(d$studyid=="JiVitA-4" & d$tr!="Control")) > 0){
+   #   d=d[-which(d$studyid=="JiVitA-4" & d$tr!="Control"),]
+   #   d=d[-which(d$studyid=="JiVitA-3" & d$tr!="Control"),]
+   # }
+   # d=d[-which(d$studyid=="PROBIT" & d$tr!="Control"),]
+   # d=d[-which(d$studyid=="iLiNS-Zinc" & d$tr!="Control"),]
+   # d=d[-which(d$studyid=="SAS-CompFeed" & d$tr!="Control"),]
+   # d=d[-which(d$studyid=="COHORTS" & d$tr=="Other"),]
+   return(d)
+ }
> 
> 
> #--------------------------------------------
> # Read in master data file
> #--------------------------------------------
> 
> d <- readRDS(paste0(ghapdata_dir, "ki-synthetic-dataset.rds"))
> dim(d)
[1] 2247099      82
> length(unique(paste0(d$studyid,d$country,d$subjid)))
[1] 192171
> 
> d %>% group_by(region) %>% summarize(mean(whz < -2)*100)
# A tibble: 4 x 2
  region        `mean(whz < -2) * 100`
  <fct>                          <dbl>
1 South Asia                        NA
2 Africa                            NA
3 Latin America                     NA
4 Europe                            NA
> 
> #--------------------------------------------
> # Subset to  just identifying and anthro data
> #--------------------------------------------
> 
> d <- d %>% subset(., select=c(studyid, subjid, country, region, measurefreq, tr, sex, agedays, haz, whz, waz, muaz, latitude, longitud, syntype))
> 
> #Check for duplicate agedays
> dup_age <- d %>% group_by(studyid, subjid, agedays) %>%
+   summarize(N=n())
`summarise()` has grouped output by 'studyid', 'subjid'. You can override using the `.groups` argument.
> mean(dup_age$N)
[1] 1.075114
> 
> # count number of studies
> length(names(table(d$studyid)))
[1] 27
> 
> # table of studies
> table(d$studyid)

Burkina Faso Zn  CMC-V-BCS-2002            CMIN         COHORTS         CONTENT 
          53846           40223           15210          290195           23137 
             EE       GMS-Nepal   Guatemala BSC      iLiNS-DOSE    iLiNS-DYAD-M 
          25511           39225            7380           49216           29594 
     iLiNS-Zinc        JiVitA-3        JiVitA-4          Keneba          LCNI-5 
          22603          301187           88230          126284           15878 
         MAL-ED       NIH-Birth      NIH-Crypto          PROBIT         PROVIDE 
         132206           29277           29071          408357           41466 
         ResPak    SAS-CompFeed   SAS-FoodSuppl  TanzaniaChild2  Vellore Crypto 
           8896           21691            6605           92181           37302 
      Vitamin A        ZVITAMBO 
          98336          213992 
> table(d$studyid,d$country)
                 
                  BURKINA FASO  INDIA BANGLADESH   PERU GUATEMALA PHILIPPINES
  Burkina Faso Zn        53846      0          0      0         0           0
  CMC-V-BCS-2002             0  40223          0      0         0           0
  CMIN                       0      0      15210      0         0           0
  COHORTS                    0 148276          0      0     35372      106547
  CONTENT                    0      0          0  23137         0           0
  EE                         0      0          0      0         0           0
  GMS-Nepal                  0      0          0      0         0           0
  Guatemala BSC              0      0          0      0      7380           0
  iLiNS-DOSE                 0      0          0      0         0           0
  iLiNS-DYAD-M               0      0          0      0         0           0
  iLiNS-Zinc             22603      0          0      0         0           0
  JiVitA-3                   0      0     301187      0         0           0
  JiVitA-4                   0      0      88230      0         0           0
  Keneba                     0      0          0      0         0           0
  LCNI-5                     0      0          0      0         0           0
  MAL-ED                     0  19969      19226  19651         0           0
  NIH-Birth                  0      0      29277      0         0           0
  NIH-Crypto                 0      0      29071      0         0           0
  PROBIT                     0      0          0      0         0           0
  PROVIDE                    0      0      41466      0         0           0
  ResPak                     0      0          0      0         0           0
  SAS-CompFeed               0  21691          0      0         0           0
  SAS-FoodSuppl              0   6605          0      0         0           0
  TanzaniaChild2             0      0          0      0         0           0
  Vellore Crypto             0  37302          0      0         0           0
  Vitamin A                  0  98336          0      0         0           0
  ZVITAMBO                   0      0          0      0         0           0
                 
                  PAKISTAN  NEPAL MALAWI GAMBIA BRAZIL TANZANIA SOUTH AFRICA
  Burkina Faso Zn        0      0      0      0      0        0            0
  CMC-V-BCS-2002         0      0      0      0      0        0            0
  CMIN                   0      0      0      0      0        0            0
  COHORTS                0      0      0      0      0        0            0
  CONTENT                0      0      0      0      0        0            0
  EE                 25511      0      0      0      0        0            0
  GMS-Nepal              0  39225      0      0      0        0            0
  Guatemala BSC          0      0      0      0      0        0            0
  iLiNS-DOSE             0      0  49216      0      0        0            0
  iLiNS-DYAD-M           0      0  29594      0      0        0            0
  iLiNS-Zinc             0      0      0      0      0        0            0
  JiVitA-3               0      0      0      0      0        0            0
  JiVitA-4               0      0      0      0      0        0            0
  Keneba                 0      0      0 126284      0        0            0
  LCNI-5                 0      0  15878      0      0        0            0
  MAL-ED                 0  17490      0      0  17020    17730        21120
  NIH-Birth              0      0      0      0      0        0            0
  NIH-Crypto             0      0      0      0      0        0            0
  PROBIT                 0      0      0      0      0        0            0
  PROVIDE                0      0      0      0      0        0            0
  ResPak              8896      0      0      0      0        0            0
  SAS-CompFeed           0      0      0      0      0        0            0
  SAS-FoodSuppl          0      0      0      0      0        0            0
  TanzaniaChild2         0      0      0      0      0    92181            0
  Vellore Crypto         0      0      0      0      0        0            0
  Vitamin A              0      0      0      0      0        0            0
  ZVITAMBO               0      0      0      0      0        0            0
                 
                  BELARUS ZIMBABWE
  Burkina Faso Zn       0        0
  CMC-V-BCS-2002        0        0
  CMIN                  0        0
  COHORTS               0        0
  CONTENT               0        0
  EE                    0        0
  GMS-Nepal             0        0
  Guatemala BSC         0        0
  iLiNS-DOSE            0        0
  iLiNS-DYAD-M          0        0
  iLiNS-Zinc            0        0
  JiVitA-3              0        0
  JiVitA-4              0        0
  Keneba                0        0
  LCNI-5                0        0
  MAL-ED                0        0
  NIH-Birth             0        0
  NIH-Crypto            0        0
  PROBIT           408357        0
  PROVIDE               0        0
  ResPak                0        0
  SAS-CompFeed          0        0
  SAS-FoodSuppl         0        0
  TanzaniaChild2        0        0
  Vellore Crypto        0        0
  Vitamin A             0        0
  ZVITAMBO              0   213992
> 
> 
> 
> #--------------------------------------------
> # order data, create measurement id, and 
> # drop unrealistic measures depending on 
> # anthropometry measure
> #--------------------------------------------
> nobs <- nrow(d)
> nobsq_cc <- nrow(d %>% filter(measurefreq!="yearly" & agedays < 24*30.4167, !is.na(haz)))
> nobsq <- nrow(d %>% filter(measurefreq!="yearly" & agedays < 24*30.4167, !is.na(haz)) %>% do(drop_int_arms(.)))
> nobsm <- nrow(d %>% filter(measurefreq=="monthly" & agedays < 24*30.4167, !is.na(haz)))
> stunt_mort <- d %>% filter(haz >= -6 & haz <=6, !is.na(haz)) %>%
+   subset(., select = - c(whz, waz, muaz)) %>%
+   arrange(studyid,subjid,agedays) %>%
+   group_by(studyid,subjid) %>%
+   arrange(studyid,subjid,agedays) %>%
+   mutate(measid=seq_along(subjid)) 
> 
> #Observations dropped
> nobs - nrow(stunt_mort)
[1] 108214
> 
> 
> #C+C manuscript dropped
> dropped <- nobsq_cc - nrow(stunt_mort %>% filter(measurefreq!="yearly" & agedays < 24*30.4167, !is.na(haz)) %>% ungroup())
> dropped
[1] 2828
> dropped/nobsq_cc * 100 #percentage dropped
[1] 0.1667281
> 
> 
> #Stunting manuscript dropped
> dropped <- nobsq - nrow(stunt_mort %>% ungroup() %>% filter(measurefreq!="yearly" & agedays < 24*30.4167) %>% do(drop_int_arms(.)))
> dropped
[1] 2045
> dropped/nobsq * 100 #percentage dropped
[1] 0.1491737
> 
> 
> 
> 
> nobsq <- nrow(d %>% filter(measurefreq!="yearly" & agedays < 24*30.4167, !is.na(whz)))
> nobsm <- nrow(d %>% filter(measurefreq=="monthly" & agedays < 24*30.4167, !is.na(whz)))
> wast_mort <- d %>% filter(whz >= -5 & whz <=5) %>%
+   subset(., select = - c(haz, waz, muaz)) %>%
+   arrange(studyid,subjid,agedays) %>%
+   group_by(studyid,subjid) %>%
+   arrange(studyid,subjid,agedays) %>%
+   mutate(measid=seq_along(subjid)) 
> nobs - nrow(wast_mort)
[1] 218989
> dropped <- nobsq - nrow(wast_mort %>% filter(measurefreq!="yearly" & agedays < 24*30.4167, !is.na(whz)))
> dropped
[1] 4316
> dropped/nobsq * 100 #percentage dropped - quarterly
[1] 0.2590632
> droppedm <- nobsm - nrow(wast_mort %>% filter(measurefreq=="monthly" & agedays < 24*30.4167, !is.na(whz)))
> droppedm
[1] 859
> droppedm/nobsm * 100 #percentage dropped monthly
[1] 0.1650435
> 
> 
> nobsq <- nrow(d %>% filter(measurefreq!="yearly" & agedays < 24*30.4167, !is.na(waz)))
> nobsm <- nrow(d %>% filter(measurefreq=="monthly" & agedays < 24*30.4167, !is.na(waz)))
> waz_mort <- d %>% filter(waz >= -6 & waz <=5) %>%
+   arrange(studyid,subjid,agedays) %>%
+   group_by(studyid,subjid) %>%
+   arrange(studyid,subjid,agedays) %>%
+   mutate(measid=seq_along(subjid)) 
> nobs - nrow(waz_mort)
[1] 26039
> dropped <- nobsq - nrow(waz_mort %>% filter(measurefreq!="yearly" & agedays < 24*30.4167, !is.na(waz)))
> dropped
[1] 3137
> dropped/nobsq * 100 #percentage dropped
[1] 0.1830483
> droppedm <- nobsm - nrow(waz_mort %>% filter(measurefreq=="monthly" & agedays < 24*30.4167, !is.na(waz)))
> droppedm
[1] 441
> droppedm/nobsm * 100 #percentage dropped monthly
[1] 0.08189947
> 
> 
> nobsq <- nrow(d %>% filter(measurefreq!="yearly" & agedays < 24*30.4167, !is.na(haz), !is.na(whz)))
> 
> 
> #double check calculations above
> co_mort <- d %>% filter(haz >= -6 & haz <=6 & whz >= -5 & whz <=5) %>%
+   arrange(studyid,subjid,agedays) %>%
+   group_by(studyid,subjid) %>%
+   arrange(studyid,subjid,agedays) %>%
+   mutate(measid=seq_along(subjid)) 
> nobs - nrow(co_mort)
[1] 221036
> dropped <- nobsq - nrow(co_mort %>% filter(measurefreq!="yearly" & agedays < 24*30.4167, !is.na(haz), !is.na(whz)))
> dropped
[1] 6135
> dropped/nobsq * 100 #percentage dropped
[1] 0.3682466
> 
> 
> 
> #--------------------------------------------
> # Save datasets with yearly studies for 
> # mortality analysis
> #--------------------------------------------
> 
> save(stunt_mort, wast_mort, waz_mort, co_mort, file=paste0(ghapdata_dir, "mortality_anthro_data.RData"))
> 
> 
> 
> #--------------------------------------------
> # Subset to non-yearly and save risk factor data
> #--------------------------------------------
> 
> #Keep monthly and quarterly studies
> stunt_rf <- stunt_mort %>% filter(measurefreq!="yearly")
> wast_rf <- wast_mort %>% filter(measurefreq!="yearly")
> waz_rf <- waz_mort %>% filter(measurefreq!="yearly")
> co_rf <- co_mort %>% filter(measurefreq!="yearly")
> 
> 
> saveRDS(stunt_rf, rf_stunting_data_path)
> saveRDS(wast_rf, rf_wasting_data_path)
> saveRDS(waz_rf, rf_underweight_path)
> saveRDS(co_rf, rf_co_occurrence_path)
> 
> 
> #--------------------------------------------
> # Get C+C manuscript N's
> #--------------------------------------------
> Ndf <- rbind(stunt_rf, wast_rf, waz_rf) %>% filter(agedays < 24 * 30.4167)
> length(unique(paste0(Ndf$studyid, Ndf$country))) #cohorts
[1] 31
> length(unique(Ndf$country)) #Countries
[1] 15
> length(unique(paste0(Ndf$studyid, Ndf$subjid))) #Children
[1] 162013
> length(unique(paste0(Ndf$studyid, "_",Ndf$subjid, "_", Ndf$agedays))) #Observations
[1] 1597133
> 
> 
> #Get N's for mortality studies
> mort_Ndf <- rbind(stunt_mort, wast_mort, waz_mort) %>% filter(measurefreq=="yearly", agedays < 24 * 30.4167)
> length(unique(paste0(mort_Ndf$studyid, mort_Ndf$country))) #cohorts
[1] 4
> length(unique(mort_Ndf$country)) #Countries
[1] 3
> length(unique(paste0(mort_Ndf$studyid, mort_Ndf$subjid))) #Children
[1] 29778
> length(unique(paste0(mort_Ndf$studyid, "_", mort_Ndf$subjid, "_", mort_Ndf$agedays))) #Observations
[1] 203175
> 
> mort_Ndf <- rbind(stunt_mort, wast_mort, waz_mort) %>% filter(agedays < 24 * 30.4167)
> length(unique(paste0(mort_Ndf$studyid, mort_Ndf$country))) #cohorts
[1] 35
> length(unique(mort_Ndf$country)) #Countries
[1] 15
> length(unique(paste0(mort_Ndf$studyid, "_", mort_Ndf$subjid))) #Children
[1] 191791
> length(unique(paste0(mort_Ndf$studyid, "_", mort_Ndf$subjid, "_", mort_Ndf$agedays))) #Observations
[1] 1800308
> 
> mort_Ndf2 <- mort_Ndf %>% distinct(studyid, subjid, agedays)
> length(unique(paste0(mort_Ndf2$studyid,"_", mort_Ndf2$subjid,"_", mort_Ndf2$agedays))) #Observations
[1] 1800308
> 
> 
> #double check calculations above
> cc_tab1 <- d %>% ungroup() %>% filter(agedays < 24 * 30.4167) %>%
+   filter(!is.na(whz) | !is.na(waz) | !is.na(haz)) %>% 
+   filter(abs(whz) <= 5 | abs(haz) <= 6 | (waz >= (-6) & waz <= 5)) %>% 
+   distinct(studyid, subjid, agedays, syntype) %>%
+   summarize(nobs=n(), nchild=length(unique(paste0(studyid, "_",subjid))))
> cc_tab1
     nobs nchild
1 1937453 191791
> 
> #children under 6
> cc_tab_u6 <- d %>% ungroup() %>% filter(agedays < 6 * 30.4167) %>%
+   filter(!is.na(whz) | !is.na(waz) | !is.na(haz)) %>% 
+   filter(abs(whz) <= 5 | abs(haz) <= 6 | (waz >= (-6) & waz <= 5)) %>% 
+   distinct(studyid, subjid, agedays, syntype) %>%
+   summarize(nobs=n(), nchild=length(unique(paste0(studyid, "_",subjid))))
> cc_tab_u6
    nobs nchild
1 856883 169178
> 
> #--------------------------------------------
> # Subset to and save descriptive epi data
> #--------------------------------------------
> 
> #--------------------------------------------
> # drop trial arms with intervention impact on HAZ
> # -either based on published literature or analysis
> # of effects on CI of stunting by 24months of age
> #--------------------------------------------
> 
> d %>% filter(tr!="", !is.na(haz)) %>% group_by(studyid, country, tr) %>% 
+   summarize(mn_haz=mean(haz), sd=sd(haz)) %>% 
+   mutate(ci.lb = mn_haz-1.96*sd, ci.ub = mn_haz+1.96*sd) %>%
+   as.data.frame()
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
           studyid      country       tr     mn_haz        sd     ci.lb
1  Burkina Faso Zn BURKINA FASO  Control -1.3012911 1.2177501 -3.688081
2  Burkina Faso Zn BURKINA FASO     Zinc -1.4814885 1.2313970 -3.895027
3          COHORTS    GUATEMALA  Control -2.1727330 1.3987134 -4.914211
4          COHORTS    GUATEMALA    Other -2.3446825 1.3265272 -4.944676
5    Guatemala BSC    GUATEMALA  Control -1.8125505 0.9786729 -3.730749
6    Guatemala BSC    GUATEMALA    Other -1.7382786 0.9510606 -3.602357
7       iLiNS-DOSE       MALAWI  Control -1.7891900 1.1600198 -4.062829
8       iLiNS-DOSE       MALAWI      LNS -1.7088303 1.1538032 -3.970285
9     iLiNS-DYAD-M       MALAWI  Control -1.3985765 1.1633894 -3.678820
10    iLiNS-DYAD-M       MALAWI Maternal -1.4008839 1.1607649 -3.675983
11      iLiNS-Zinc BURKINA FASO  Control -1.3953105 1.1390129 -3.627776
12      iLiNS-Zinc BURKINA FASO      LNS -1.3628292 1.1028564 -3.524428
13        JiVitA-3   BANGLADESH  Control -1.5535930 1.1725922 -3.851874
14        JiVitA-3   BANGLADESH Maternal -1.5360967 1.1847456 -3.858198
15        JiVitA-4   BANGLADESH  Control -1.5838643 1.0543849 -3.650459
16        JiVitA-4   BANGLADESH      LNS -1.6099332 1.0403123 -3.648945
17        JiVitA-4   BANGLADESH    Other -1.5581719 1.0807657 -3.676473
18          LCNI-5       MALAWI  Control -1.7770085 1.0089784 -3.754606
19          LCNI-5       MALAWI      LNS -1.8354669 1.0361646 -3.866350
20          LCNI-5       MALAWI    Other -1.8314445 1.0539128 -3.897114
21          PROBIT      BELARUS  Control  0.2154720 1.2293244 -2.194004
22          PROBIT      BELARUS Maternal  0.2057024 1.2807539 -2.304575
23         PROVIDE   BANGLADESH  Control -1.3612251 1.0785360 -3.475156
24         PROVIDE   BANGLADESH    Other -1.3649763 1.0631572 -3.448764
25    SAS-CompFeed        INDIA  Control -1.7065262 1.1707836 -4.001262
26    SAS-CompFeed        INDIA    Other -1.7010320 1.1996130 -4.052274
27   SAS-FoodSuppl        INDIA  Control -2.4407151 1.2373736 -4.865967
28   SAS-FoodSuppl        INDIA    Other -2.2992582 1.3781270 -5.000387
29  TanzaniaChild2     TANZANIA  Control -0.6152097 1.2068443 -2.980624
30  TanzaniaChild2     TANZANIA    Other -0.6293472 1.1929687 -2.967566
31  TanzaniaChild2     TANZANIA     Zinc -0.6615855 1.1841432 -2.982506
32        ZVITAMBO     ZIMBABWE  Control -0.9821497 1.2737277 -3.478656
33        ZVITAMBO     ZIMBABWE     VitA -0.9647704 1.2860825 -3.485492
         ci.ub
1   1.08549905
2   0.93204957
3   0.56874516
4   0.25531086
5   0.10564826
6   0.12580018
7   0.48444881
8   0.55262404
9   0.88166661
10  0.87421541
11  0.83715465
12  0.79876933
13  0.74468763
14  0.78600470
15  0.48273009
16  0.42907880
17  0.56012892
18  0.20058919
19  0.19541573
20  0.23422458
21  2.62494792
22  2.71598007
23  0.75270538
24  0.71881187
25  0.58820966
26  0.65020958
27 -0.01546272
28  0.40187060
29  1.75020510
30  1.70887136
31  1.65933522
32  1.51435665
33  1.55595123
> 
> 
> 
> stunt <- drop_int_arms(stunt_rf) 
> wast <- drop_int_arms(wast_rf) 
> waz <- drop_int_arms(waz_rf) 
> co <- drop_int_arms(co_rf) 
> 
> stunt <- droplevels(stunt)
> wast <- droplevels(wast)
> waz <- droplevels(waz)
> co <- droplevels(co)
> 
> saveRDS(stunt, stunting_data_path)
> saveRDS(wast, wasting_data_path)
> saveRDS(waz, underweight_data_path)
> saveRDS(co, co_occurrence_data_path)
> 
> 
> #--------------------------------------------
> # Get Stunting manuscript N's
> #--------------------------------------------
> Ndf <- stunt %>% filter(agedays < 24 * 30.4167)
> length(unique(paste0(Ndf$studyid, Ndf$country))) #cohorts
[1] 31
> length(unique(Ndf$country)) #Countries
[1] 15
> length(unique(paste0(Ndf$studyid, Ndf$subjid))) #Children
[1] 143379
> length(unique(paste0(Ndf$studyid, "_",Ndf$subjid, "_",Ndf$agedays))) #Observations
[1] 1278465
> nrow(Ndf) #Observations
[1] 1368840
> 
> #Monthly N's
> Ndf <- stunt %>% filter(agedays < 24 * 30.4167, measurefreq=="monthly")
> length(unique(paste0(Ndf$studyid, Ndf$country))) #cohorts
[1] 18
> length(unique(Ndf$country)) #Countries
[1] 10
> length(unique(paste0(Ndf$studyid, Ndf$subjid))) #Children
[1] 22808
> nrow(Ndf) #Observations
[1] 520735
> 
> 
> #--------------------------------------------
> # Get Wasting manuscript N's
> #--------------------------------------------
> Ndf <- rbind(stunt, wast, waz) %>% filter(agedays < 24 * 30.4167, measurefreq=="monthly")
> length(unique(paste0(Ndf$studyid, Ndf$country))) #cohorts
[1] 18
> length(unique(Ndf$country)) #Countries
[1] 10
> length(unique(paste0(Ndf$studyid, Ndf$subjid))) #Children
[1] 22817
> length(unique(paste0(Ndf$studyid, "_", Ndf$subjid, "_", Ndf$agedays))) #Observations
[1] 517473
> 
> 
> proc.time()
   user  system elapsed 
892.121  19.211 911.389 
