
R version 4.0.4 (2021-02-15) -- "Lost Library Book"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> rm(list=ls())
> source(paste0(here::here(), "/0-config.R"))
── Attaching packages ─────────────────────────────────────── tidyverse 1.3.0 ──
✔ ggplot2 3.3.2     ✔ purrr   0.3.4
✔ tibble  3.1.0     ✔ dplyr   1.0.5
✔ tidyr   1.1.1     ✔ stringr 1.4.0
✔ readr   1.3.1     ✔ forcats 0.5.0
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
here() starts at /home/andrew.mertens/ki-synthetic

Attaching package: ‘gridExtra’

The following object is masked from ‘package:dplyr’:

    combine


Attaching package: ‘reshape2’

The following object is masked from ‘package:tidyr’:

    smiths

Loading required package: Matrix

Attaching package: ‘Matrix’

The following objects are masked from ‘package:tidyr’:

    expand, pack, unpack

Loading 'metafor' package (version 2.4-0). For an overview 
and introduction to the package please type: help(metafor).

Attaching package: ‘data.table’

The following objects are masked from ‘package:reshape2’:

    dcast, melt

The following objects are masked from ‘package:dplyr’:

    between, first, last

The following object is masked from ‘package:purrr’:

    transpose

Loading required package: viridisLite

Attaching package: ‘maps’

The following object is masked from ‘package:purrr’:

    map


Attaching package: ‘assertthat’

The following object is masked from ‘package:tibble’:

    has_name

Loading required package: nlme

Attaching package: ‘nlme’

The following object is masked from ‘package:dplyr’:

    collapse

This is mgcv 1.8-31. For overview type 'help("mgcv-package")'.

Attaching package: ‘lazyeval’

The following objects are masked from ‘package:purrr’:

    is_atomic, is_formula


Attaching package: ‘scales’

The following object is masked from ‘package:viridis’:

    viridis_pal

The following object is masked from ‘package:purrr’:

    discard

The following object is masked from ‘package:readr’:

    col_factor


Attaching package: ‘foreach’

The following objects are masked from ‘package:purrr’:

    accumulate, when

Loading required package: iterators
Loading required package: parallel
Loading required package: survival

Attaching package: ‘survey’

The following object is masked from ‘package:graphics’:

    dotchart

Loading required package: bit

Attaching package: ‘bit’

The following object is masked from ‘package:data.table’:

    setattr

The following object is masked from ‘package:base’:

    xor

Attaching package bit64
package:bit64 (c) 2011-2017 Jens Oehlschlaegel
creators: integer64 runif64 seq :
coercion: as.integer64 as.vector as.logical as.integer as.double as.character as.bitstring
logical operator: ! & | xor != == < <= >= >
arithmetic operator: + - * / %/% %% ^
math: sign abs sqrt log log2 log10
math: floor ceiling trunc round
querying: is.integer64 is.vector [is.atomic} [length] format print str
values: is.na is.nan is.finite is.infinite
aggregation: any all min max range sum prod
cumulation: diff cummin cummax cumsum cumprod
access: length<- [ [<- [[ [[<-
combine: c rep cbind rbind as.data.frame
WARNING don't use as subscripts
WARNING semantics differ from integer
for more help type ?bit64

Attaching package: ‘bit64’

The following objects are masked from ‘package:base’:

    :, %in%, is.double, match, order, rank


Attaching package: ‘zoo’

The following objects are masked from ‘package:base’:

    as.Date, as.Date.numeric

Warning message:
package ‘tidyverse’ was built under R version 4.0.5 
> 
> #source(here("2-descriptive-outcomes/stunting/0-make-who-growth-vel.R"))
> source(here("2-descriptive-outcomes/stunting/1_growth_velocity.R"))
Registered S3 method overwritten by 'pryr':
  method      from
  print.bytes Rcpp
Observations with agedays value ofare outside the range of the standard. Setting to NA.
Observations with agedays value ofare outside the range of the standard. Setting to NA.
(t1 - t2) in months:  0 - 3 
y outcome:  haz 
tgap value:  14 
No. of subjects with y avail in window of t1:  253568 
No. of subjects with y avail in window of t2:  203988 
No. of subjects with both y avail (t1,t2):  182317 
(t1 - t2) in months:  3 - 6 
y outcome:  haz 
tgap value:  14 
No. of subjects with y avail in window of t1:  203988 
No. of subjects with y avail in window of t2:  185939 
No. of subjects with both y avail (t1,t2):  148660 
(t1 - t2) in months:  6 - 9 
y outcome:  haz 
tgap value:  14 
No. of subjects with y avail in window of t1:  185939 
No. of subjects with y avail in window of t2:  136465 
No. of subjects with both y avail (t1,t2):  111092 
(t1 - t2) in months:  9 - 12 
y outcome:  haz 
tgap value:  14 
No. of subjects with y avail in window of t1:  136465 
No. of subjects with y avail in window of t2:  173454 
No. of subjects with both y avail (t1,t2):  111341 
(t1 - t2) in months:  12 - 15 
y outcome:  haz 
tgap value:  14 
No. of subjects with y avail in window of t1:  173454 
No. of subjects with y avail in window of t2:  67189 
No. of subjects with both y avail (t1,t2):  54935 
(t1 - t2) in months:  15 - 18 
y outcome:  haz 
tgap value:  14 
No. of subjects with y avail in window of t1:  67189 
No. of subjects with y avail in window of t2:  69804 
No. of subjects with both y avail (t1,t2):  48439 
(t1 - t2) in months:  18 - 21 
y outcome:  haz 
tgap value:  14 
No. of subjects with y avail in window of t1:  69804 
No. of subjects with y avail in window of t2:  34602 
No. of subjects with both y avail (t1,t2):  27776 
(t1 - t2) in months:  21 - 24 
y outcome:  haz 
tgap value:  14 
No. of subjects with y avail in window of t1:  34602 
No. of subjects with y avail in window of t2:  84301 
No. of subjects with both y avail (t1,t2):  23037 
(t1 - t2) in months:  0 - 3 
y outcome:  waz 
tgap value:  14 
No. of subjects with y avail in window of t1:  264681 
No. of subjects with y avail in window of t2:  204951 
No. of subjects with both y avail (t1,t2):  191737 
(t1 - t2) in months:  3 - 6 
y outcome:  waz 
tgap value:  14 
No. of subjects with y avail in window of t1:  204951 
No. of subjects with y avail in window of t2:  186108 
No. of subjects with both y avail (t1,t2):  149373 
(t1 - t2) in months:  6 - 9 
y outcome:  waz 
tgap value:  14 
No. of subjects with y avail in window of t1:  186108 
No. of subjects with y avail in window of t2:  135413 
No. of subjects with both y avail (t1,t2):  110338 
(t1 - t2) in months:  9 - 12 
y outcome:  waz 
tgap value:  14 
No. of subjects with y avail in window of t1:  135413 
No. of subjects with y avail in window of t2:  171257 
No. of subjects with both y avail (t1,t2):  109174 
(t1 - t2) in months:  12 - 15 
y outcome:  waz 
tgap value:  14 
No. of subjects with y avail in window of t1:  171257 
No. of subjects with y avail in window of t2:  64678 
No. of subjects with both y avail (t1,t2):  52928 
(t1 - t2) in months:  15 - 18 
y outcome:  waz 
tgap value:  14 
No. of subjects with y avail in window of t1:  64678 
No. of subjects with y avail in window of t2:  67109 
No. of subjects with both y avail (t1,t2):  46087 
(t1 - t2) in months:  18 - 21 
y outcome:  waz 
tgap value:  14 
No. of subjects with y avail in window of t1:  67109 
No. of subjects with y avail in window of t2:  31427 
No. of subjects with both y avail (t1,t2):  25072 
(t1 - t2) in months:  21 - 24 
y outcome:  waz 
tgap value:  14 
No. of subjects with y avail in window of t1:  31427 
No. of subjects with y avail in window of t2:  82024 
No. of subjects with both y avail (t1,t2):  20521 
(t1 - t2) in months:  0 - 3 
y outcome:  lencm 
tgap value:  14 
No. of subjects with y avail in window of t1:  253568 
No. of subjects with y avail in window of t2:  203988 
No. of subjects with both y avail (t1,t2):  182317 
(t1 - t2) in months:  3 - 6 
y outcome:  lencm 
tgap value:  14 
No. of subjects with y avail in window of t1:  203988 
No. of subjects with y avail in window of t2:  185939 
No. of subjects with both y avail (t1,t2):  148660 
(t1 - t2) in months:  6 - 9 
y outcome:  lencm 
tgap value:  14 
No. of subjects with y avail in window of t1:  185939 
No. of subjects with y avail in window of t2:  136465 
No. of subjects with both y avail (t1,t2):  111092 
(t1 - t2) in months:  9 - 12 
y outcome:  lencm 
tgap value:  14 
No. of subjects with y avail in window of t1:  136465 
No. of subjects with y avail in window of t2:  173454 
No. of subjects with both y avail (t1,t2):  111341 
(t1 - t2) in months:  12 - 15 
y outcome:  lencm 
tgap value:  14 
No. of subjects with y avail in window of t1:  173454 
No. of subjects with y avail in window of t2:  67189 
No. of subjects with both y avail (t1,t2):  54935 
(t1 - t2) in months:  15 - 18 
y outcome:  lencm 
tgap value:  14 
No. of subjects with y avail in window of t1:  67189 
No. of subjects with y avail in window of t2:  69804 
No. of subjects with both y avail (t1,t2):  48439 
(t1 - t2) in months:  18 - 21 
y outcome:  lencm 
tgap value:  14 
No. of subjects with y avail in window of t1:  69804 
No. of subjects with y avail in window of t2:  34602 
No. of subjects with both y avail (t1,t2):  27776 
(t1 - t2) in months:  21 - 24 
y outcome:  lencm 
tgap value:  14 
No. of subjects with y avail in window of t1:  34602 
No. of subjects with y avail in window of t2:  84301 
No. of subjects with both y avail (t1,t2):  23037 
(t1 - t2) in months:  0 - 3 
y outcome:  wtkg 
tgap value:  14 
No. of subjects with y avail in window of t1:  264681 
No. of subjects with y avail in window of t2:  204951 
No. of subjects with both y avail (t1,t2):  191737 
(t1 - t2) in months:  3 - 6 
y outcome:  wtkg 
tgap value:  14 
No. of subjects with y avail in window of t1:  204951 
No. of subjects with y avail in window of t2:  186108 
No. of subjects with both y avail (t1,t2):  149373 
(t1 - t2) in months:  6 - 9 
y outcome:  wtkg 
tgap value:  14 
No. of subjects with y avail in window of t1:  186108 
No. of subjects with y avail in window of t2:  135413 
No. of subjects with both y avail (t1,t2):  110338 
(t1 - t2) in months:  9 - 12 
y outcome:  wtkg 
tgap value:  14 
No. of subjects with y avail in window of t1:  135413 
No. of subjects with y avail in window of t2:  171257 
No. of subjects with both y avail (t1,t2):  109174 
(t1 - t2) in months:  12 - 15 
y outcome:  wtkg 
tgap value:  14 
No. of subjects with y avail in window of t1:  171257 
No. of subjects with y avail in window of t2:  64678 
No. of subjects with both y avail (t1,t2):  52928 
(t1 - t2) in months:  15 - 18 
y outcome:  wtkg 
tgap value:  14 
No. of subjects with y avail in window of t1:  64678 
No. of subjects with y avail in window of t2:  67109 
No. of subjects with both y avail (t1,t2):  46087 
(t1 - t2) in months:  18 - 21 
y outcome:  wtkg 
tgap value:  14 
No. of subjects with y avail in window of t1:  67109 
No. of subjects with y avail in window of t2:  31427 
No. of subjects with both y avail (t1,t2):  25072 
(t1 - t2) in months:  21 - 24 
y outcome:  wtkg 
tgap value:  14 
No. of subjects with y avail in window of t1:  31427 
No. of subjects with y avail in window of t2:  82024 
No. of subjects with both y avail (t1,t2):  20521 
> source(here("2-descriptive-outcomes/stunting/2_stunt_calc_outcomes.R"))
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
Adding missing grouping variables: `country`
Adding missing grouping variables: `country`
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
Adding missing grouping variables: `country`
Adding missing grouping variables: `country`
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
Adding missing grouping variables: `country`
Adding missing grouping variables: `country`
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
Adding missing grouping variables: `country`
Adding missing grouping variables: `country`
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
There were 50 or more warnings (use warnings() to see the first 50)
> source(here("2-descriptive-outcomes/stunting/3_pool_velocity_outcomes.R"))
`summarise()` has grouped output by 'studyid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat', 'ycat'. You can override using the `.groups` argument.
There were 50 or more warnings (use warnings() to see the first 50)
> source(here("2-descriptive-outcomes/stunting/4_stunt_flowdata.R"))
`summarise()` has grouped output by 'studyid', 'country', 'subjid', 'region'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
> source(here("2-descriptive-outcomes/stunting/5_stunt_rec_cohort.R"))
> source(here("2-descriptive-outcomes/stunting/6_stunt_meandiff_haz.R"))
[1] "studyid CMC-V-BCS-2002"
[1] "studyid CMIN"
[1] "studyid COHORTS"
[1] "studyid CONTENT"
[1] "studyid EE"
[1] "studyid GMS-Nepal"
[1] "studyid Guatemala BSC"
[1] "studyid iLiNS-Zinc"
[1] "studyid JiVitA-3"
[1] "studyid JiVitA-4"
[1] "studyid Keneba"
[1] "studyid LCNI-5"
[1] "studyid MAL-ED"
[1] "studyid NIH-Birth"
[1] "studyid NIH-Crypto"
[1] "studyid PROBIT"
[1] "studyid PROVIDE"
[1] "studyid ResPak"
[1] "studyid SAS-CompFeed"
[1] "studyid SAS-FoodSuppl"
[1] "studyid TanzaniaChild2"
[1] "studyid Vellore Crypto"
[1] "studyid ZVITAMBO"
> source(here("2-descriptive-outcomes/stunting/7_stunt_meandiff_hazvel.R"))
[1] "studyid CMC-V-BCS-2002"
[1] "studyid COHORTS"
[1] "studyid MAL-ED"
[1] "studyid SAS-CompFeed"
[1] "studyid Vellore Crypto"
[1] "studyid CMIN"
[1] "studyid JiVitA-3"
[1] "studyid JiVitA-4"
[1] "studyid NIH-Birth"
[1] "studyid NIH-Crypto"
[1] "studyid PROVIDE"
[1] "studyid CONTENT"
[1] "studyid EE"
[1] "studyid ResPak"
[1] "studyid GMS-Nepal"
[1] "studyid Keneba"
[1] "studyid TanzaniaChild2"
[1] "studyid PROBIT"
[1] "studyid ZVITAMBO"
[1] "studyid SAS-FoodSuppl"
[1] "studyid Guatemala BSC"
[1] "studyid LCNI-5"
[1] "studyid iLiNS-Zinc"
[1] "studyid CMC-V-BCS-2002"
[1] "studyid COHORTS"
[1] "studyid MAL-ED"
[1] "studyid SAS-CompFeed"
[1] "studyid Vellore Crypto"
[1] "studyid CMIN"
[1] "studyid JiVitA-3"
[1] "studyid JiVitA-4"
[1] "studyid NIH-Birth"
[1] "studyid NIH-Crypto"
[1] "studyid PROVIDE"
[1] "studyid CONTENT"
[1] "studyid EE"
[1] "studyid ResPak"
[1] "studyid GMS-Nepal"
[1] "studyid Keneba"
[1] "studyid TanzaniaChild2"
[1] "studyid PROBIT"
[1] "studyid ZVITAMBO"
[1] "studyid SAS-FoodSuppl"
[1] "studyid Guatemala BSC"
[1] "studyid LCNI-5"
[1] "studyid iLiNS-Zinc"
> source(here("2-descriptive-outcomes/stunting/8_stunt_meanLAZ_strat_incage.R"))
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
There were 50 or more warnings (use warnings() to see the first 50)
> source(here("2-descriptive-outcomes/stunting/9_stunt_velocity_strat_incage.R"))
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
`summarise()` has grouped output by 'studyid', 'country', 'agecat', 'ycat', 'sex', 'stunt_inc_age'. You can override using the `.groups` argument.
Error in rma(data = data, mi = data[[yi]], sdi = sqrt(data[[vi]]), ni = data[[ni]],  : 
  object 'vi0' not found
In addition: Warning messages:
1: In rma(data = data, mi = data[[yi]], sdi = sqrt(data[[vi]]), ni = data[[ni]],  :
  Studies with NAs omitted from model fitting.
2: In rma(data = data, mi = data[[yi]], sdi = sqrt(data[[vi]]), ni = data[[ni]],  :
  Studies with NAs omitted from model fitting.
3: In rma(data = data, mi = data[[yi]], sdi = sqrt(data[[vi]]), ni = data[[ni]],  :
  Studies with NAs omitted from model fitting.
4: In rma(data = data, mi = data[[yi]], sdi = sqrt(data[[vi]]), ni = data[[ni]],  :
  Studies with NAs omitted from model fitting.
5: In rma(data = data, mi = data[[yi]], sdi = sqrt(data[[vi]]), ni = data[[ni]],  :
  Studies with NAs omitted from model fitting.
6: In rma(data = data, mi = data[[yi]], sdi = sqrt(data[[vi]]), ni = data[[ni]],  :
  Studies with NAs omitted from model fitting.
Error in rma(data = data, mi = data[[yi]], sdi = sqrt(data[[vi]]), ni = data[[ni]],  : 
  object 'vi0' not found
Error in rma(data = data, mi = data[[yi]], sdi = sqrt(data[[vi]]), ni = data[[ni]],  : 
  object 'vi0' not found
Error in rbind(deparse.level, ...) : 
  numbers of columns of arguments do not match
Calls: source ... RE_pool -> as.data.frame -> do.call -> <Anonymous> -> rbind
In addition: Warning messages:
1: In rma(data = data, mi = data[[yi]], sdi = sqrt(data[[vi]]), ni = data[[ni]],  :
  Studies with NAs omitted from model fitting.
2: In rma(data = data, mi = data[[yi]], sdi = sqrt(data[[vi]]), ni = data[[ni]],  :
  Studies with NAs omitted from model fitting.
3: In rma(data = data, mi = data[[yi]], sdi = sqrt(data[[vi]]), ni = data[[ni]],  :
  Studies with NAs omitted from model fitting.
4: In rma(data = data, mi = data[[yi]], sdi = sqrt(data[[vi]]), ni = data[[ni]],  :
  Studies with NAs omitted from model fitting.
Execution halted
