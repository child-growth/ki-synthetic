
R version 4.0.4 (2021-02-15) -- "Lost Library Book"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> 
> #-----------------------------------
> # Stunting Outcomes - Risk factor analysis
> # Repeat sections of descriptive epi
> # scripts to calculate the outcomes on
> # the risk factor dataset (monthly and
> # quarterly, all arms of RCTs)
> #-----------------------------------
> 
> rm(list=ls())
> 
> source(paste0(here::here(), "/0-config.R"))
── Attaching packages ─────────────────────────────────────── tidyverse 1.3.0 ──
✔ ggplot2 3.3.2     ✔ purrr   0.3.4
✔ tibble  3.1.0     ✔ dplyr   1.0.5
✔ tidyr   1.1.1     ✔ stringr 1.4.0
✔ readr   1.3.1     ✔ forcats 0.5.0
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
here() starts at /home/andrew.mertens/ki-synthetic

Attaching package: ‘gridExtra’

The following object is masked from ‘package:dplyr’:

    combine


Attaching package: ‘reshape2’

The following object is masked from ‘package:tidyr’:

    smiths

Loading required package: Matrix

Attaching package: ‘Matrix’

The following objects are masked from ‘package:tidyr’:

    expand, pack, unpack

Loading 'metafor' package (version 2.4-0). For an overview 
and introduction to the package please type: help(metafor).

Attaching package: ‘data.table’

The following objects are masked from ‘package:reshape2’:

    dcast, melt

The following objects are masked from ‘package:dplyr’:

    between, first, last

The following object is masked from ‘package:purrr’:

    transpose

Loading required package: viridisLite

Attaching package: ‘maps’

The following object is masked from ‘package:purrr’:

    map


Attaching package: ‘assertthat’

The following object is masked from ‘package:tibble’:

    has_name

Loading required package: nlme

Attaching package: ‘nlme’

The following object is masked from ‘package:dplyr’:

    collapse

This is mgcv 1.8-31. For overview type 'help("mgcv-package")'.

Attaching package: ‘lazyeval’

The following objects are masked from ‘package:purrr’:

    is_atomic, is_formula


Attaching package: ‘scales’

The following object is masked from ‘package:viridis’:

    viridis_pal

The following object is masked from ‘package:purrr’:

    discard

The following object is masked from ‘package:readr’:

    col_factor


Attaching package: ‘foreach’

The following objects are masked from ‘package:purrr’:

    accumulate, when

Loading required package: iterators
Loading required package: parallel
Loading required package: survival

Attaching package: ‘survey’

The following object is masked from ‘package:graphics’:

    dotchart

Loading required package: bit

Attaching package: ‘bit’

The following object is masked from ‘package:data.table’:

    setattr

The following object is masked from ‘package:base’:

    xor

Attaching package bit64
package:bit64 (c) 2011-2017 Jens Oehlschlaegel
creators: integer64 runif64 seq :
coercion: as.integer64 as.vector as.logical as.integer as.double as.character as.bitstring
logical operator: ! & | xor != == < <= >= >
arithmetic operator: + - * / %/% %% ^
math: sign abs sqrt log log2 log10
math: floor ceiling trunc round
querying: is.integer64 is.vector [is.atomic} [length] format print str
values: is.na is.nan is.finite is.infinite
aggregation: any all min max range sum prod
cumulation: diff cummin cummax cumsum cumprod
access: length<- [ [<- [[ [[<-
combine: c rep cbind rbind as.data.frame
WARNING don't use as subscripts
WARNING semantics differ from integer
for more help type ?bit64

Attaching package: ‘bit64’

The following objects are masked from ‘package:base’:

    :, %in%, is.double, match, order, rank


Attaching package: ‘zoo’

The following objects are masked from ‘package:base’:

    as.Date, as.Date.numeric

Warning message:
package ‘tidyverse’ was built under R version 4.0.5 
> source(paste0(here::here(),"/0-project-functions/0_descriptive_epi_wast_functions.R"))
> 
> 
> d <- readRDS(rf_stunting_data_path)
> 
> #--------------------------------------
> # Calculate cumulative incidence of
> # Stunting in certain age ranges for the
> # risk factor analysis
> #--------------------------------------
> 
> 
> # define age windows
> d6 <- calc.ci.agecat(d, range = 6, birth="yes")
> 
> 
> d6 <- d6 %>% ungroup() %>% arrange(studyid,country,subjid, agedays) %>%
+   group_by(syntype,studyid,country,subjid, agecat) %>% 
+   mutate(minhaz=min(haz)) %>% 
+   ungroup() 
> 
> 
> #calculate any stunting from 0-6
> stunt_ci_0_6 = d6 %>% ungroup() %>%
+   filter(agecat=="0-6 months") %>%
+   group_by(syntype,studyid,country,subjid) %>%
+   #create variable with minhaz by age category, cumulatively
+   mutate(agecat="0-6 months", minhaz=min(haz), ever_stunted=ifelse(minhaz< (-2),1,0), ever_sstunted=ifelse(minhaz< (-3),1,0), Nobs=n()) %>% slice(1) %>%
+   mutate(N=n()) %>%
+   ungroup() 
> 
> 
> stunt_ci_6_24 = d6 %>% ungroup() %>% 
+   group_by(syntype,studyid,country,subjid) %>%
+   arrange(syntype,studyid,country,subjid, agedays) %>% 
+   mutate(anystunt06 = 1*(agecat=="0-6 months" & minhaz < -2),
+          anystunt06 = anystunt06[1]) %>% 
+   filter(agecat!="0-6 months" & !is.na(agecat) & anystunt06==0) %>%
+   mutate(agecat="6-24 months", minhaz=min(haz), ever_stunted=ifelse(minhaz< -2,1,0), ever_sstunted=ifelse(minhaz< (-3),1,0), Nobs=n()) %>% slice(1) %>%
+   mutate(N=n()) %>%
+   ungroup() %>%
+   select(syntype,studyid,subjid, country,tr,agedays,haz, measurefreq, measid, agecat,minhaz, ever_stunted,Nobs, N, anystunt06)
> 
> 
> #calculate any stunting from 0-24
> stunt_ci_0_24 = d6 %>% ungroup() %>%
+   filter(!is.na(agecat)) %>%
+   group_by(syntype,studyid,country,subjid) %>%
+   #create variable with minhaz by age category, cumulatively
+   mutate(agecat="0-24 months", minhaz=min(haz), ever_stunted=ifelse(minhaz< -2,1,0), ever_sstunted=ifelse(minhaz< (-3),1,0), Nobs=n()) %>% slice(1) %>%
+   mutate(N=n()) %>%
+   ungroup() 
> 
> stunt_ci_6_24 <- stunt_ci_6_24 %>% subset(., select = -c(anystunt06))
> cuminc <- bind_rows(stunt_ci_0_6, stunt_ci_6_24, stunt_ci_0_24)
> 
> 
> 
> #--------------------------------------
> # Calculate cumulative incidence, excluding
> # stunting at birth
> #--------------------------------------
> 
> 
> stunt_ci_0_6_no_birth = d6 %>% ungroup() %>% 
+   arrange(syntype,studyid,country,subjid, agedays) %>% 
+   filter(agecat=="0-6 months" & !is.na(agecat)) %>%
+   group_by(syntype,studyid,country,subjid) %>%
+   arrange(syntype,studyid,country,subjid, agedays) %>% 
+   #mark if children were born stunted and drop
+   mutate(start_stunt= as.numeric(first(haz) < -2)) %>%
+   filter(start_stunt==0) %>% #drop children born wasted
+   mutate(agecat="0-6 months (no birth st.)", minhaz=min(haz), ever_stunted=ifelse(minhaz< -2,1,0), ever_sstunted=ifelse(minhaz< (-3),1,0), Nobs=n()) %>% slice(1) %>%
+   mutate(N=n()) %>%
+   ungroup() %>%
+   select(syntype,studyid,subjid, country,tr,agedays,haz, measurefreq, measid, agecat,minhaz, ever_stunted,Nobs,N)
> 
> stunt_ci_0_24_no_birth = d6 %>% ungroup() %>% 
+   filter(!is.na(agecat)) %>%
+   group_by(syntype,studyid,country,subjid) %>%
+   arrange(syntype,studyid,country,subjid, agedays) %>% 
+   #mark if children were born stunted and drop
+   mutate(start_stunt= as.numeric(first(haz) < -2)) %>% 
+   filter(start_stunt==0) %>% #drop children born wasted
+   mutate(agecat="0-24 months (no birth st.)", minhaz=min(haz), ever_stunted=ifelse(minhaz< -2,1,0), ever_sstunted=ifelse(minhaz< (-3),1,0), Nobs=n()) %>% slice(1) %>%
+   mutate(N=n()) %>%
+   ungroup() %>%
+   select(syntype,studyid,subjid, country,tr,agedays,haz, measurefreq, measid, agecat,minhaz, ever_stunted,Nobs,N)
> 
> cuminc_nobirth <- rbind(stunt_ci_0_6_no_birth, stunt_ci_0_24_no_birth)
> 
> 
> table(cuminc$ever_stunted[cuminc$agecat=="0-6 months"])

     0      1 
171675  66371 
> table(cuminc_nobirth$ever_stunted[cuminc_nobirth$agecat=="0-6 months (no birth st.)"])

     0      1 
171675  26223 
> 
> table(cuminc$ever_stunted[cuminc$agecat=="0-24 months"])

     0      1 
143185 107393 
> table(cuminc_nobirth$ever_stunted[cuminc_nobirth$agecat=="0-24 months (no birth st.)"])

     0      1 
143185  63902 
> 
> 
> 
> 
> #--------------------------------------
> # Calculate prevalence of
> # Stunting in certain age ranges for the
> # risk factor analysis
> #--------------------------------------
> 
> # define age windows
> dprev <- calc.prev.agecat(d)
> 
> 
> # take mean of multiple measurements within age window
> dmn <- dprev %>%
+   filter(!is.na(agecat)) %>%
+   group_by(syntype,studyid,country,subjid,agecat) %>%
+   summarise(haz=mean(haz)) %>%
+   mutate(stunted=ifelse(haz< -2, 1,0),sstunted=ifelse(haz< -3, 1,0))
`summarise()` has grouped output by 'syntype', 'studyid', 'country', 'subjid'. You can override using the `.groups` argument.
> 
> 
> # export
> prev = dmn %>% 
+   filter(agecat=="Birth" | agecat=="6 months" | agecat=="24 months") %>%
+   select(syntype,studyid,subjid,country,agecat,
+          stunted, sstunted)
> 
> # save mean Z scores at each age
> meanHAZ = dmn %>% 
+   filter(agecat=="Birth" | agecat=="6 months" | agecat=="24 months") %>%
+   select(syntype,studyid,subjid,country,agecat,
+          haz)
> 
> 
> #--------------------------------------
> # Calculate recovery from
> # Stunting in certain age ranges for the
> # risk factor analysis
> #--------------------------------------
> 
> # subset to monthly data
> d <- d %>% filter(measurefreq=="monthly")
> 
> # create age in months
> d <- d %>% mutate(agem=agedays/30.4167)
> 
> # sort data
> d <- d %>% arrange(studyid, country, subjid, agedays)
> 
> # define age windows with 2 week buffer around age point
> # (ie, for 6 months, consider recovery in the window  up to 7 months)
> d = d %>% 
+   mutate(agecat=ifelse(agedays==1,"Birth",
+                        ifelse(agedays>1 & agedays<=3.5*30.4167,"3 months",
+                               ifelse(agedays>3.5*30.4167 & agedays<=6.5*30.4167,"6 months",
+                                      ifelse(agedays>6.5*30.4167 & agedays<=9.5*30.4167,"9 months",
+                                             ifelse(agedays>9.5*30.4167 & agedays<=12.5*30.4167,"12 months",
+                                                    ifelse(agedays>12.5*30.4167 & agedays<=18.5*30.4167,"18 months",
+                                                           ifelse(agedays>18.5*30.4167& agedays<=24.5*30.4167,"24 months","")))))))) %>%
+   mutate(agecat=factor(agecat,levels=c("Birth","3 months","6 months","9 months","12 months","18 months","24 months")))
> 
> # check age categories
> d %>%
+   group_by(syntype,agecat) %>%
+   summarise(n=sum(!is.na(agedays)),
+             min=min(agedays/30.4167),
+             mean=mean(agedays/30.4167,na.rm=TRUE),
+             max=max(agedays/30.4167))
`summarise()` has grouped output by 'syntype'. You can override using the `.groups` argument.
# A tibble: 23 x 6
# Groups:   syntype [3]
   syntype agecat        n     min    mean     max
   <chr>   <fct>     <int>   <dbl>   <dbl>   <dbl>
 1 BC      Birth      2166  0.0329  0.0329  0.0329
 2 BC      3 months  34019  0.0658  1.89    3.48  
 3 BC      6 months  27891  3.52    4.95    6.48  
 4 BC      9 months  25668  6.51    8.03    9.47  
 5 BC      12 months 25264  9.50   11.1    12.5   
 6 BC      18 months 38028 12.5    15.6    18.5   
 7 BC      24 months 29379 18.5    21.5    24.5   
 8 BC      <NA>      21364 24.5    38.3    69.3   
 9 FULL    Birth      2166  0.0329  0.0329  0.0329
10 FULL    3 months  34019  0.0658  1.89    3.48  
# … with 13 more rows
> 
> # subset to stunted between birth and 3 months
> stunt.03 <- d %>%
+   filter(agecat=="Birth" | agecat=="3 months") %>%
+   group_by(syntype,studyid,country,subjid) %>%
+   mutate(measid=seq_along(subjid))  %>%
+   mutate(stunted=ifelse(haz< -2,1,0),
+          lagstunted=lag(stunted),
+          leadstunted=lead(stunted))  %>%
+   # unique stunting episode
+   mutate(sepisode=ifelse(lagstunted==0 & stunted==1 & leadstunted==1 |
+                            stunted==1 & measid==1,1,0)) %>%
+   # identify whether child had stunting episode between 0 and 3 months 
+   summarise(stunted03=max(sepisode,na.rm=TRUE))
`summarise()` has grouped output by 'syntype', 'studyid', 'country'. You can override using the `.groups` argument.
> 
> rec.24 <- d %>%
+   filter(agecat=="24 months") %>%
+   # identify last two measurements prior to 24 months
+   group_by(syntype,studyid,country,subjid) %>%
+   mutate(rank=min_rank(-agedays)) %>%
+   filter(rank<= 2) %>%
+   # flag kids with 2 measurements not stunted
+   mutate(rec=ifelse(haz>= -2,1,0)) %>%
+   mutate(recsum=cumsum(rec)) %>%
+   # one row for each kid, indicator for recovered
+   summarise(maxrec=max(recsum)) %>%
+   mutate(rec24=ifelse(maxrec==2,1,0)) %>%
+   select(-c(maxrec))
`summarise()` has grouped output by 'syntype', 'studyid', 'country'. You can override using the `.groups` argument.
> 
> rev <- full_join(stunt.03, rec.24,by=c("syntype","studyid","country","subjid")) %>%
+   mutate(s03rec24=ifelse(stunted03==1 & rec24==1,1,0)) %>%
+   select(syntype,studyid, country,subjid, s03rec24)
> 
> # #--------------------------------------
> # # Format and subset the growth velocity dataset
> # #--------------------------------------
> # vel <- readRDS(file=paste0(ghapdata_dir,"velocity_longfmt_rf.rds"))
> # 
> # #Drop yearly studies
> # vel <- vel[!vel$studyid %in% c(
> #   "WASH-Bangladesh",       
> #   "WASH-Kenya",  
> #   "iLiNS-DOSE",     
> #   "iLiNS-DYAD-M", 
> #   "iLiNS-DYAD-G",
> #   "AgaKhanUniv",           
> #   "Burkina Faso Zn",    
> #   "VITAMIN-A",  
> #   "Vitamin-B12",
> #   "Serrinha-VitA",   
> #   "EU",        
> #   "ZnMort"),]
> # 
> # vel <- vel[!(vel$studyid=="COHORTS" & vel$country=="BRAZIL"),] #Drop because yearly 
> # vel <- vel[!(vel$studyid=="COHORTS" & vel$country=="SOUTH AFRICA"),] #Drop because yearly 
> # 
> # class(vel$subjid)
> # 
> # #Get only HAZ change from growth velocity dataset, and format names
> # vel_haz <- vel %>% filter(ycat=="haz") %>% subset(., select=c(syntype,studyid, country, subjid, y_rate, diffcat)) %>%
> #   rename(agecat = diffcat)
> # 
> # #Get only height in cm change from growth velocity dataset, and format names
> # vel_lencm <- vel %>% filter(ycat=="lencm") %>% subset(., select=c(syntype,studyid, country, subjid, y_rate, diffcat)) %>%
> #   rename(agecat = diffcat)
> # 
> # 
> # #Get only HAZ change from growth velocity dataset, and format names
> # vel_waz <- vel %>% filter(ycat=="waz") %>% subset(., select=c(syntype,studyid, country, subjid, y_rate, diffcat)) %>%
> #   rename(agecat = diffcat)
> # 
> # #Get only height in cm change from growth velocity dataset, and format names
> # vel_wtkg <- vel %>% filter(ycat=="wtkg") %>% subset(., select=c(syntype,studyid, country, subjid, y_rate, diffcat)) %>%
> #   rename(agecat = diffcat)
> 
> 
> #--------------------------------------
> # save datasets
> #--------------------------------------
> 
> 
> save(prev, file="/data/KI/synthetic-data/st_prev_outcomes.RData")
> save(meanHAZ, file="/data/KI/synthetic-data/st_meanZ_outcomes.RData")
> save(cuminc, file="/data/KI/synthetic-data/st_cuminc_outcomes.rdata")
> save(cuminc_nobirth, file="/data/KI/synthetic-data/st_cuminc_outcomes_nobirth.rdata")
> save(rev, file="/data/KI/synthetic-data/st_rec_outcomes.RData")
> # save(vel_haz, vel_lencm, file="/data/KI/synthetic-data/st_vel_outcomes.RData")
> # save(vel_waz, vel_wtkg, file="/data/KI/synthetic-data/waz_vel_outcomes.RData")
> 
> proc.time()
   user  system elapsed 
738.700   3.777 742.441 
