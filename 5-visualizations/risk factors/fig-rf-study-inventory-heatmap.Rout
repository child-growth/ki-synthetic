
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #-----------------------------------
> # study-inventory-heatmaps.R
> #
> # andrew mertens (amertens@berkeley.edu)
> #
> # create a heatmap of data availability
> # for weight and height by study 
> # in GHAP using meta-data
> # (GHAP_metadata) that Andrew created
> # using GHAPStudyMetadata.R
> #-----------------------------------
> 
> 
> 
> #-----------------------------------
> # preamble
> #-----------------------------------
> rm(list=ls())
> source(paste0(here::here(), "/0-config.R"))
── Attaching packages ────────────────────────────────── tidyverse 1.3.0.9000 ──
✔ ggplot2 3.2.1     ✔ purrr   0.3.3
✔ tibble  2.1.3     ✔ dplyr   0.8.4
✔ tidyr   1.0.0     ✔ stringr 1.4.0
✔ readr   1.3.1     ✔ forcats 0.4.0
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
here() starts at /home/andrew.mertens/ki-longitudinal-manuscripts

Attaching package: ‘gridExtra’

The following object is masked from ‘package:dplyr’:

    combine


Attaching package: ‘reshape2’

The following object is masked from ‘package:tidyr’:

    smiths

Loading required package: Matrix

Attaching package: ‘Matrix’

The following objects are masked from ‘package:tidyr’:

    expand, pack, unpack

Loading 'metafor' package (version 2.1-0). For an overview 
and introduction to the package please type: help(metafor).

Attaching package: ‘data.table’

The following objects are masked from ‘package:reshape2’:

    dcast, melt

The following objects are masked from ‘package:dplyr’:

    between, first, last

The following object is masked from ‘package:purrr’:

    transpose

Loading required package: viridisLite

Attaching package: ‘maps’

The following object is masked from ‘package:purrr’:

    map


Attaching package: ‘ggridges’

The following object is masked from ‘package:ggplot2’:

    scale_discrete_manual


Attaching package: ‘assertthat’

The following object is masked from ‘package:tibble’:

    has_name

Loading required package: nlme

Attaching package: ‘nlme’

The following object is masked from ‘package:dplyr’:

    collapse

This is mgcv 1.8-30. For overview type 'help("mgcv-package")'.

Attaching package: ‘lazyeval’

The following objects are masked from ‘package:purrr’:

    is_atomic, is_formula


Attaching package: ‘rlang’

The following objects are masked from ‘package:lazyeval’:

    as_name, call_modify, call_standardise, expr_label, expr_text,
    f_env, f_env<-, f_label, f_lhs, f_lhs<-, f_rhs, f_rhs<-, f_text,
    is_atomic, is_call, is_formula, is_lang, is_pairlist, missing_arg

The following object is masked from ‘package:assertthat’:

    has_name

The following object is masked from ‘package:data.table’:

    :=

The following objects are masked from ‘package:purrr’:

    %@%, as_function, flatten, flatten_chr, flatten_dbl, flatten_int,
    flatten_lgl, flatten_raw, invoke, list_along, modify, prepend,
    splice


Attaching package: ‘scales’

The following object is masked from ‘package:viridis’:

    viridis_pal

The following object is masked from ‘package:purrr’:

    discard

The following object is masked from ‘package:readr’:

    col_factor


Attaching package: ‘foreach’

The following objects are masked from ‘package:purrr’:

    accumulate, when

Loading required package: iterators
Loading required package: parallel
Loading required package: survival

Attaching package: ‘survey’

The following object is masked from ‘package:graphics’:

    dotchart

Loading required package: bit
Attaching package bit
package:bit (c) 2008-2012 Jens Oehlschlaegel (GPL-2)
creators: bit bitwhich
coercion: as.logical as.integer as.bit as.bitwhich which
operator: ! & | xor != ==
querying: print length any all min max range sum summary
bit access: length<- [ [<- [[ [[<-
for more help type ?bit

Attaching package: ‘bit’

The following object is masked from ‘package:data.table’:

    setattr

The following object is masked from ‘package:base’:

    xor

Attaching package bit64
package:bit64 (c) 2011-2012 Jens Oehlschlaegel
creators: integer64 seq :
coercion: as.integer64 as.vector as.logical as.integer as.double as.character as.bin
logical operator: ! & | xor != == < <= >= >
arithmetic operator: + - * / %/% %% ^
math: sign abs sqrt log log2 log10
math: floor ceiling trunc round
querying: is.integer64 is.vector [is.atomic} [length] format print str
values: is.na is.nan is.finite is.infinite
aggregation: any all min max range sum prod
cumulation: diff cummin cummax cumsum cumprod
access: length<- [ [<- [[ [[<-
combine: c rep cbind rbind as.data.frame
WARNING don't use as subscripts
WARNING semantics differ from integer
for more help type ?bit64

Attaching package: ‘bit64’

The following object is masked from ‘package:bit’:

    still.identical

The following objects are masked from ‘package:base’:

    :, %in%, is.double, match, order, rank


Attaching package: ‘zoo’

The following objects are masked from ‘package:base’:

    as.Date, as.Date.numeric

Warning message:
New theme missing the following elements: line, rect, text, axis.title.x, axis.title.x.top, axis.title.y, axis.title.y.right, axis.text, axis.text.x, axis.text.x.top, axis.text.y, axis.text.y.right, axis.ticks, axis.ticks.length, axis.ticks.length.x, axis.ticks.length.x.top, axis.ticks.length.x.bottom, axis.ticks.length.y, axis.ticks.length.y.left, axis.ticks.length.y.right, axis.line, axis.line.x, axis.line.y, legend.background, legend.margin, legend.spacing, legend.spacing.x, legend.spacing.y, legend.key, legend.key.size, legend.key.height, legend.key.width, legend.text, legend.text.align, legend.title, legend.title.align, legend.position, legend.direction, legend.justification, legend.box, legend.box.margin, legend.box.background, legend.box.spacing, panel.background, panel.border, panel.spacing, panel.spacing.x, panel.spacing.y, panel.grid, panel.grid.minor, panel.ontop, plot.background, plot.title, plot.subtitle, plot.caption, plot.tag, plot.tag.position, plot.margin, strip.backgr [... truncated] 
> 
> #Function source
> source(paste0(here(),"/0-project-functions/0_clean_study_data_functions.R"))
> source(paste0(here::here(), "/0-project-functions/0_risk_factor_functions.R"))
> 
> textcol = "grey20"
> 
> 
> #-----------------------------------
> # load the risk factor presence and N's
> #-----------------------------------
> rfp <- readRDS(here('results/cov_presence.rds'))
> rfn <- readRDS(here('results/cov_N.rds'))
> 
> # gather rf presence by study into long format
> rfp <- rfp %>% 
+   gather(risk_factor,presence,-studyid, -country) 
> 
> # gather rf Ns by study into long format
> rfn <- rfn %>% 
+   gather(risk_factor, N,-studyid, -country) 
> 
> #Merge dataframes together
> dim(rfp)
[1] 1225    4
> dim(rfn)
[1] 1225    4
> d <- merge(rfp, rfn, by = c("studyid", "country", "risk_factor"))
> dim(d)
[1] 1225    5
> 
> #Drop EE gestational age
> dim(d)
[1] 1225    5
> d <- d %>% filter(!(studyid=="EE" & risk_factor=="gagebrth"))
> dim(d)
[1] 1224    5
> 
> #Mark measure frequency
> d <- mark_measure_freq(d)
> d <- d %>% filter(measurefreq!="yearly")
> 
> #fix PROVIDE location
> d$country[d$study_id=="PROVIDE"] <- "BANGLADESH"
> 
> #remove grant identifier
> d$studyid<- gsub("^k.*?-" , "", d$studyid)
> 
> #-----------------------------------
> # clean study descriptions
> #-----------------------------------
> 
> dd <- shorten_descriptions(d)
> 
> # # simplify Tanzania label
> dd$country <- as.character(dd$country)
> dd$country[dd$country=="TANZANIA, UNITED REPUBLIC OF"] <- "TANZANIA"
> 
> 
> 
> #-----------------------------------
> # Do some final tidying up for the plot
> #-----------------------------------
> 
> 
> 
> # make a study-country label, and make the monthly variable into a factor
> # including an anonymous label (temporary) for sharing with WHO
> dd <- mutate(dd,
+              country=str_to_title(str_to_lower(country)), 
+              studycountry=paste0(short_description,', ',country)) 
> 
> #Add regions with ugly Europe hack to change ordering
> dd <- dd %>% mutate(country = toupper(country))
> dd <- dd %>% mutate(region = case_when(
+   country=="BANGLADESH" | country=="INDIA"|
+     country=="NEPAL" | country=="PAKISTAN"|
+     country=="PHILIPPINES"                   ~ "Asia", 
+   country=="KENYA"|
+     country=="GHANA"|
+     country=="BURKINA FASO"|
+     country=="GUINEA-BISSAU"|
+     country=="MALAWI"|
+     country=="SOUTH AFRICA"|
+     country=="TANZANIA"|
+     country=="ZIMBABWE"|
+     country=="GAMBIA"                       ~ "Africa",
+   country=="BELARUS"                      ~ "",
+   country=="BRAZIL" | country=="GUATEMALA" |
+     country=="PERU"                         ~ "Latin America",
+   TRUE                                    ~ "Other"
+ ))
> 
> table(dd$region)

                     Africa          Asia Latin America 
           35           245           629           175 
> 
> dd$region <- as.character(dd$region)
> dd$region[dd$region=="Latin America"] <- "Latin Am."
> dd$region <- factor(dd$region, levels=c("Asia","Africa","Latin Am.",""))
> 
> dd <- mutate(dd,
+              studycountry = factor(studycountry,
+                                    levels=unique(studycountry[order(region, studyid)]), 
+                                    ordered=TRUE))
> 
> #Clean up risk factor names
> dd$RFlabel <- NA
> dd$RFlabel[dd$risk_factor=="sex"] <-  "Gender"
> dd$RFlabel[dd$risk_factor=="enstunt"] <-  "Enrolled stunted"
> dd$RFlabel[dd$risk_factor=="enwast"] <-  "Enrolled wasted"
> dd$RFlabel[dd$risk_factor=="gagebrth"] <-  "Gestational age at birth"
> dd$RFlabel[dd$risk_factor=="predexfd6"] <-  "Excl./Pred. breastfeeding under 6 months"
> dd$RFlabel[dd$risk_factor=="mage"] <- "Mother's age" 
> dd$RFlabel[dd$risk_factor=="mhtcm"] <- "Mother's height" 
> dd$RFlabel[dd$risk_factor=="mwtkg"] <- "Mother's weight" 
> dd$RFlabel[dd$risk_factor=="mbmi"] <- "Mother's BMI" 
> dd$RFlabel[dd$risk_factor=="meducyrs"] <- "Mother's education" 
> dd$RFlabel[dd$risk_factor=="parity"] <-  "Birth order" 
> dd$RFlabel[dd$risk_factor=="hfoodsec"] <- "Household food security" 
> dd$RFlabel[dd$risk_factor=="nchldlt5"] <-   "Number of children <5 in household"
> dd$RFlabel[dd$risk_factor=="hhwealth_quart"] <-  "Household wealth" 
> dd$RFlabel[dd$risk_factor=="fage"] <- "Father's age" 
> dd$RFlabel[dd$risk_factor=="fhtcm"] <- "Father's height" 
> dd$RFlabel[dd$risk_factor=="birthwt"] <- "Birthweight (kg)" 
> dd$RFlabel[dd$risk_factor=="birthlen"] <- "Birth length (cm)" 
> dd$RFlabel[dd$risk_factor=="vagbrth"] <- "Vaginal birth" 
> dd$RFlabel[dd$risk_factor=="hdlvry"] <- "Child delivered at home" 
> dd$RFlabel[dd$risk_factor=="single"] <- "Single parent" 
> dd$RFlabel[dd$risk_factor=="nrooms"] <- "Number of rooms in household" 
> dd$RFlabel[dd$risk_factor=="nhh"] <- "Number of people in household" 
> dd$RFlabel[dd$risk_factor=="meducyrs"] <- "Maternal education quartile" 
> dd$RFlabel[dd$risk_factor=="feducyrs"] <- "Paternal education quartile" 
> dd$RFlabel[dd$risk_factor=="anywast06"] <- "Any wasting before 6 months age" 
> dd$RFlabel[dd$risk_factor=="pers_wast"] <- "Persistent wasting before 6 months age" 
> dd$RFlabel[dd$risk_factor=="trth2o"] <- "Treats drinking water" 
> dd$RFlabel[dd$risk_factor=="cleanck"] <- "Clean cooking fuel usage" 
> dd$RFlabel[dd$risk_factor=="impfloor"] <- "Improved floor" 
> dd$RFlabel[dd$risk_factor=="impsan"] <- "Improved sanitation" 
> dd$RFlabel[dd$risk_factor=="safeh20"] <- "Safe water source" 
> dd$RFlabel[dd$risk_factor=="perdiar6"] <- "Percent days with diarrhea under 6 months" 
> dd$RFlabel[dd$risk_factor=="perdiar24"] <- "Percent days with diarrhea under 24 months" 
> dd$RFlabel[dd$risk_factor=="earlybf"] <- "Breastfeed within an hour of birth" 
> dd$RFlabel[dd$risk_factor=="predfeed3"] <-  "Predominant breastfeeding under 3 months"
> dd$RFlabel[dd$risk_factor=="predfeed36"] <-  "Predominant breastfeeding from 3-6 months"
> dd$RFlabel[dd$risk_factor=="predfeed6"] <-  "Predominant breastfeeding under 6 months"
> dd$RFlabel[dd$risk_factor=="exclfeed3"] <-  "Exclusive breastfeeding under 3 months"
> dd$RFlabel[dd$risk_factor=="exclfeed36"] <-  "Exclusive breastfeeding from 3-6 months"
> dd$RFlabel[dd$risk_factor=="exclfeed6"] <-  "Exclusive breastfeeding under 6 months"
> dd$RFlabel[dd$risk_factor=="month"] <-  "Month of measurement"
> dd$RFlabel[dd$risk_factor=="brthmon"] <-  "Birth month"
> dd$RFlabel[dd$risk_factor=="lag_WHZ_quart"] <-  "Mean WHZ in the prior 3 months"
> dd$RFlabel[dd$risk_factor=="rain_quartile"] <-  "Rain quartile"
> 
> table(dd$risk_factor, is.na(dd$RFlabel))
                
                 FALSE
  anywast06         31
  birthlen          31
  birthwt           31
  cleanck           31
  earlybf           31
  enstunt           31
  enwast            31
  fage              31
  feducyrs          31
  fhtcm             31
  gagebrth          30
  hdlvry            31
  hfoodsec          31
  hhwealth_quart    31
  impfloor          31
  impsan            31
  mage              31
  mbmi              31
  meducyrs          31
  mhtcm             31
  mwtkg             31
  nchldlt5          31
  nhh               31
  nrooms            31
  parity            31
  perdiar24         31
  perdiar6          31
  pers_wast         31
  predexfd6         31
  rain_quartile     31
  safeh20           31
  sex               31
  single            31
  trth2o            31
  vagbrth           31
> dd <- dd %>% filter(!is.na(RFlabel))
> # dfull <- dd
> # dd <- dd %>% filter(N>0) 
> 
> # Sort by size 
> dd <- dd %>% group_by(region, risk_factor) %>% mutate(sumN=sum(N))
> dd <- dd %>% 
+   group_by(region) %>%
+   dplyr::arrange(-sumN, .by_group = TRUE) 
> dd$RFlabel <- factor(dd$RFlabel, levels = unique(dd$RFlabel))
> 
> 
> 
> #aggregate N's for topbar
> dhist_a <- dd %>% group_by(risk_factor) %>% summarize(N=sum(N))  %>% mutate(risk_factor=factor(risk_factor, levels=unique(dd$risk_factor))) %>% arrange(risk_factor)
> 
> 
> dd <- dd %>% 
+   group_by(region, studycountry) %>% mutate(maxN=max(N, na.rm=T))%>%
+   group_by(region) %>%
+   dplyr::arrange(maxN, .by_group = TRUE) 
> dd$studycountry <- sapply(dd$studycountry, function(x) as.character(x))
> dd$studycountry <- factor(dd$studycountry, levels = unique(dd$studycountry))
> 
> #aggregate N's for sidebar
> dhist_c <- dd %>% group_by(region, studycountry) %>% summarize(N=max(N, na.rm=T))%>% mutate(studycountry=factor(studycountry, levels=unique(dd$studycountry))) %>% arrange(studycountry)
> 
> 
> 
> #-----------------------------------
> # Plot heatmaps
> #-----------------------------------
> 
> #define a color for fonts
> textcol = "grey20"
> 
> 
> 
> hm <- ggplot(dd,aes(x=RFlabel,y=studycountry, fill=factor(presence))) +
+   facet_grid(region~., scales = "free_y", space="free") +
+   geom_tile(colour="white",size=0.25) +
+   scale_y_discrete(expand=c(0,0))+
+   theme_grey(base_size=10)+
+   theme(
+     aspect.ratio = 1,
+     legend.title=element_text(color=textcol,size=8),
+     legend.margin = margin(grid::unit(0.1,"cm")),
+     legend.text=element_text(colour=textcol,size=7,face="bold"),
+     legend.key.height=grid::unit(0.2,"cm"),
+     legend.key.width=grid::unit(1,"cm"),
+     legend.position = "none",
+     axis.text.x=element_text(size=8,colour=textcol,angle=45,hjust=1),
+     axis.text.y=element_text(size=8,vjust = 0.2,colour=textcol),
+     axis.ticks=element_line(size=0.4),
+     plot.title=element_text(colour=textcol,hjust=0,size=12,face="bold"),
+     strip.text.x = element_text(size=10),
+     strip.text.y = element_text(angle=270,size=10),
+     plot.background=element_blank(),
+     panel.border=element_blank(),
+     strip.background =element_rect(color = "grey20", size = 1, fill="grey100")
+   ) + 
+   labs(x="Exposure",y="",title="b") +
+   scale_fill_manual(values = c("grey90", "#287D8EFF"))
> 
> 
> 
> 
> 
> #-----------------------------------
> # n by risk factor top plot 
> #-----------------------------------
> nrfbar <- ggplot(dhist_a, aes(y = N/1000, x = risk_factor, fill=risk_factor)) +
+   geom_bar(stat = "identity") +  
+   scale_fill_manual(values=rep('gray70',50),na.value="grey90") +
+   theme(
+     # make background white
+     panel.background = element_blank(),
+     panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
+     plot.title=element_text(colour=textcol,hjust=0.04,size=12,face="bold"),
+     axis.title.x=element_blank(),
+     axis.text.x=element_blank(),
+     axis.ticks.x=element_blank(),
+     panel.border = element_blank(),
+     axis.title.y = element_text(size=10)
+   ) +
+   scale_y_continuous(expand=c(0,0), limits=c(0,100),
+                      breaks=seq(0,100,by=20),labels=seq(0,100,by=20))+
+   ylab("Sample size (1000's)") + xlab("") +
+   geom_hline(yintercept = seq(0,100,by=20),color='white',size=0.3) +
+   ggtitle("a")
> 
> 
> #-----------------------------------
> # n by study right plot 
> #-----------------------------------
> sidebar_c <- ggplot(data = dhist_c, aes(x = studycountry, y=N/1000, fill=region)) + 
+   geom_bar(stat = "identity") +
+   coord_flip() + 
+   facet_grid(region~.,scales='free_y',space='free_y') +
+   scale_x_discrete(expand=c(0,0)) +
+   scale_fill_manual(values=rep('gray70',7),na.value="grey90",
+                     guide=guide_legend(title="",title.hjust = 0.5,
+                                        label.position="bottom",label.hjust=0.5,nrow=1,
+                                        override.aes = list(color = "white", fill="white"))) +
+   theme_grey(base_size=10) +
+   theme(
+     legend.title=element_text(color=textcol,size=8),
+     legend.margin = margin(grid::unit(0.1,"cm")),
+     legend.text=element_text(colour=NA,size=7,face="bold"),
+     legend.key.height=grid::unit(0.2,"cm"),
+     legend.key.width=grid::unit(0.2,"cm"),
+     legend.position = "bottom",
+     axis.title.y = element_blank(), 
+     axis.text.y = element_blank(),
+     axis.ticks.y = element_blank(),
+     strip.text.x = element_blank(),
+     strip.text.y = element_blank(),
+     axis.title.x = element_text(size=10),
+     plot.title=element_text(colour=textcol,hjust=0,size=12,face="bold"),
+     panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
+     panel.background = element_blank()) +
+   labs(x = "",y="Sample size (1000s)",title="c") +
+   scale_y_continuous(expand=c(0,0),limits=c(0,30),
+                      breaks=seq(0,30,by=5),labels=seq(0,30,by=5)) +
+   geom_hline(yintercept = seq(0,30,by=5),color='white',size=0.3)
> 
> 
> 
> # add margin around plots
> # hm2 = hm + theme(plot.margin = unit(c(0,0.25,0.25,0.25), "cm")) #top, right, bottom, left
> # sidebar_c2 = sidebar_c + theme(plot.margin = unit(c(0,0.25,4.22,0), "cm"))
> # nrfbar2 = nrfbar + theme(plot.margin = unit(c(0,2.3,0,5.45), "cm"))
> hm2 = hm + theme(plot.margin = unit(c(0,0,0,0), "cm")) #top, right, bottom, left
> sidebar_c2 = sidebar_c + theme(plot.margin = unit(c(0,0.25,2.955,-2.75), "cm"))
> nrfbar2 = nrfbar + theme(plot.margin = unit(c(0, 3.5, 0, 6.655), "cm"))
> empty <- grid::textGrob("") 
> 
> rfhmgrid <- grid.arrange(nrfbar2,empty, 
+                           hm2, sidebar_c2, nrow = 2, ncol = 2,
+                         heights = c(25,100),
+                         widths=c(100,20))
> 
> 
> 
> # save plot 
> ggsave(filename=here("figures/manuscript-figure-composites/risk-factor/fig-rf-heatmap.png"),
+        plot = rfhmgrid,device='png',width=12,height=9)
> 
> 
> proc.time()
   user  system elapsed 
 12.129   0.859  25.599 
