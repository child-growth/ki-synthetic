
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> #-----------------------------------------
> # Process data for wasting traj figures
> #-----------------------------------------
> rm(list=ls())
> source(paste0(here::here(), "/0-config.R"))
── Attaching packages ────────────────────────────────── tidyverse 1.3.0.9000 ──
✔ ggplot2 3.2.1     ✔ purrr   0.3.3
✔ tibble  2.1.3     ✔ dplyr   0.8.4
✔ tidyr   1.0.0     ✔ stringr 1.4.0
✔ readr   1.3.1     ✔ forcats 0.4.0
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
here() starts at /home/andrew.mertens/ki-longitudinal-manuscripts

Attaching package: ‘gridExtra’

The following object is masked from ‘package:dplyr’:

    combine


Attaching package: ‘reshape2’

The following object is masked from ‘package:tidyr’:

    smiths

Loading required package: Matrix

Attaching package: ‘Matrix’

The following objects are masked from ‘package:tidyr’:

    expand, pack, unpack

Loading 'metafor' package (version 2.1-0). For an overview 
and introduction to the package please type: help(metafor).

Attaching package: ‘data.table’

The following objects are masked from ‘package:reshape2’:

    dcast, melt

The following objects are masked from ‘package:dplyr’:

    between, first, last

The following object is masked from ‘package:purrr’:

    transpose

Loading required package: viridisLite

Attaching package: ‘maps’

The following object is masked from ‘package:purrr’:

    map


Attaching package: ‘ggridges’

The following object is masked from ‘package:ggplot2’:

    scale_discrete_manual


Attaching package: ‘assertthat’

The following object is masked from ‘package:tibble’:

    has_name

Loading required package: nlme

Attaching package: ‘nlme’

The following object is masked from ‘package:dplyr’:

    collapse

This is mgcv 1.8-30. For overview type 'help("mgcv-package")'.

Attaching package: ‘lazyeval’

The following objects are masked from ‘package:purrr’:

    is_atomic, is_formula


Attaching package: ‘rlang’

The following objects are masked from ‘package:lazyeval’:

    as_name, call_modify, call_standardise, expr_label, expr_text,
    f_env, f_env<-, f_label, f_lhs, f_lhs<-, f_rhs, f_rhs<-, f_text,
    is_atomic, is_call, is_formula, is_lang, is_pairlist, missing_arg

The following object is masked from ‘package:assertthat’:

    has_name

The following object is masked from ‘package:data.table’:

    :=

The following objects are masked from ‘package:purrr’:

    %@%, as_function, flatten, flatten_chr, flatten_dbl, flatten_int,
    flatten_lgl, flatten_raw, invoke, list_along, modify, prepend,
    splice


Attaching package: ‘scales’

The following object is masked from ‘package:viridis’:

    viridis_pal

The following object is masked from ‘package:purrr’:

    discard

The following object is masked from ‘package:readr’:

    col_factor


Attaching package: ‘foreach’

The following objects are masked from ‘package:purrr’:

    accumulate, when

Loading required package: iterators
Loading required package: parallel
Loading required package: survival

Attaching package: ‘survey’

The following object is masked from ‘package:graphics’:

    dotchart

Loading required package: bit
Attaching package bit
package:bit (c) 2008-2012 Jens Oehlschlaegel (GPL-2)
creators: bit bitwhich
coercion: as.logical as.integer as.bit as.bitwhich which
operator: ! & | xor != ==
querying: print length any all min max range sum summary
bit access: length<- [ [<- [[ [[<-
for more help type ?bit

Attaching package: ‘bit’

The following object is masked from ‘package:data.table’:

    setattr

The following object is masked from ‘package:base’:

    xor

Attaching package bit64
package:bit64 (c) 2011-2012 Jens Oehlschlaegel
creators: integer64 seq :
coercion: as.integer64 as.vector as.logical as.integer as.double as.character as.bin
logical operator: ! & | xor != == < <= >= >
arithmetic operator: + - * / %/% %% ^
math: sign abs sqrt log log2 log10
math: floor ceiling trunc round
querying: is.integer64 is.vector [is.atomic} [length] format print str
values: is.na is.nan is.finite is.infinite
aggregation: any all min max range sum prod
cumulation: diff cummin cummax cumsum cumprod
access: length<- [ [<- [[ [[<-
combine: c rep cbind rbind as.data.frame
WARNING don't use as subscripts
WARNING semantics differ from integer
for more help type ?bit64

Attaching package: ‘bit64’

The following object is masked from ‘package:bit’:

    still.identical

The following objects are masked from ‘package:base’:

    :, %in%, is.double, match, order, rank


Attaching package: ‘zoo’

The following objects are masked from ‘package:base’:

    as.Date, as.Date.numeric

Warning message:
New theme missing the following elements: line, rect, text, axis.title.x, axis.title.x.top, axis.title.y, axis.title.y.right, axis.text, axis.text.x, axis.text.x.top, axis.text.y, axis.text.y.right, axis.ticks, axis.ticks.length, axis.ticks.length.x, axis.ticks.length.x.top, axis.ticks.length.x.bottom, axis.ticks.length.y, axis.ticks.length.y.left, axis.ticks.length.y.right, axis.line, axis.line.x, axis.line.y, legend.background, legend.margin, legend.spacing, legend.spacing.x, legend.spacing.y, legend.key, legend.key.size, legend.key.height, legend.key.width, legend.text, legend.text.align, legend.title, legend.title.align, legend.position, legend.direction, legend.justification, legend.box, legend.box.margin, legend.box.background, legend.box.spacing, panel.background, panel.border, panel.spacing, panel.spacing.x, panel.spacing.y, panel.grid, panel.grid.minor, panel.ontop, plot.background, plot.title, plot.subtitle, plot.caption, plot.tag, plot.tag.position, plot.margin, strip.backgr [... truncated] 
> source(paste0(here::here(), "/0-project-functions/0_clean_study_data_functions.R"))
> require(cowplot)
Loading required package: cowplot

********************************************************
Note: As of version 1.0.0, cowplot does not change the
  default ggplot2 theme anymore. To recover the previous
  behavior, execute:
  theme_set(theme_cowplot())
********************************************************


Attaching package: ‘cowplot’

The following object is masked from ‘package:ggthemes’:

    theme_map

> 
> 
> rain <- read.csv(here("/data/monthly_rainfall.csv"))
> 
> d <- readRDS(seasonality_data_path)
> d <- d %>% filter(measurefreq=="monthly")
> head(rain)
                   studyid                      study    country year Jan_pre
1             ki1000109-EE          Biomarkers for EE   Pakistan 2012    20.5
2  ki1112895-Guatemala BSC           Bovine Serum RCT  Guatemala 1997    48.6
3 ki1000108-CMC-V-BCS-2002          CMC Birth Vellore      India 2002    14.3
4           ki1114097-CMIN                       CMIN Bangladesh 1985     8.1
5        ki1114097-CONTENT Eval of Negl. Enteric Inf.       Peru 2007   173.0
6      ki1113344-GMS-Nepal     Growth Montoring Study      Nepal 2012    32.5
  Feb_pre Mar_pre Apr_pre May_pre Jun_pre Jul_pre Aug_pre Sep_pre Oct_pre
1    20.8    15.0    28.0    11.8     6.4    26.6    51.5    52.5     5.7
2    76.8    50.5   112.6   178.6   311.8   263.7   280.5   436.6   230.9
3    11.7    13.2    31.3    55.4   159.6   137.7   236.2   122.2    69.2
4    11.4    99.5   155.0   359.0   528.7   539.4   374.9   318.4    95.4
5   159.0   213.3   140.5   142.6    40.7    55.1    45.0    84.3   133.7
6    35.8    37.1    81.6    36.5   113.3   361.3   277.5   311.1    17.8
  Nov_pre Dec_pre annual_pre cohort_index country_index
1     3.3    19.9      262.0    0.5440204     0.6075232
2   428.6    53.6     2472.8    0.5788580     0.5788580
3    30.4     5.5      886.7    0.8123003     0.8161593
4    64.8     5.0     2559.6    0.8234880     0.8786344
5   171.6   157.1     1515.9    0.3696814     0.3253365
6     1.7    10.9     1317.1    0.9477893     0.8592962
> head(d)
         studyid subjid id country     region agedays measurefreq month   whz
1 CMC-V-BCS-2002      1  1   INDIA South Asia      33     monthly     1  0.55
2 CMC-V-BCS-2002      1  1   INDIA South Asia      67     monthly     2 -2.91
3 CMC-V-BCS-2002      1  1   INDIA South Asia      95     monthly     3 -2.45
4 CMC-V-BCS-2002      1  1   INDIA South Asia     130     monthly     4 -1.44
5 CMC-V-BCS-2002      1  1   INDIA South Asia     159     monthly     5 -1.27
6 CMC-V-BCS-2002      1  1   INDIA South Asia     190     monthly     6 -2.18
    haz   waz latitude longitud brthweek brthmon birthday studyday jday
1 -3.56 -2.74    78.93    12.85       50      12      343      376   12
2 -1.93 -3.62    78.93    12.85       50      12      343      410   46
3 -2.67 -3.91    78.93    12.85       50      12      343      438   74
4 -2.35 -2.74    78.93    12.85       50      12      343      473  109
5 -2.95 -3.02    78.93    12.85       50      12      343      502  138
6 -2.08 -2.90    78.93    12.85       50      12      343      533  169
> 
> rain$country <- toupper(rain$country)
> rain$country[rain$country=="TANZANIA "]<-"TANZANIA"
> rain <- mark_region(rain)
> rain$region <- factor(rain$region, levels = c("South Asia","Africa","Latin America"))
> rain$country <- tolower(rain$country)
> d$country <- tolower(d$country)
> colnames(rain)[1] <- "studyid"
> rain$studyid <- as.character(rain$studyid)
> rain$studyid[rain$studyid == "PROVIDE "] <-  "PROVIDE"
> d$country[d$country=="tanzania, united republic of"] <- "tanzania"
> 
> rain <- rain %>% 
+   rename(season_index = cohort_index) %>%
+   arrange(season_index) %>%
+   mutate(seasonality_category = 
+            case_when(
+              season_index >= 0.8 ~ "High seasonality",
+              season_index < 0.5 ~ "Low seasonality",
+              TRUE ~ "Medium seasonality"),
+          seasonality_category = factor(seasonality_category, levels=c("High seasonality", "Medium seasonality", "Low seasonality")))
> table(rain$seasonality_category)

  High seasonality Medium seasonality    Low seasonality 
                 9                  6                  3 
> 
> #remove grant identifiers from studyid
> d$studyid <- gsub("^k.*?-" , "", d$studyid)
> rain$studyid <- gsub("^k.*?-" , "", rain$studyid)
> 
> #Transform rain dataset
> rain <- rain %>% subset(., select = c("studyid", "country", "seasonality_category", "season_index", "Jan_pre", "Feb_pre", "Mar_pre", "Apr_pre", "May_pre",
+                                       "Jun_pre", "Jul_pre", "Aug_pre", "Sep_pre", "Oct_pre", "Nov_pre", "Dec_pre"))
> 
> rain$country <- str_to_title(rain$country)
> d$country <- str_to_title(d$country)
> 
> # gather meanWHZ by month data into long format
> rain2 <- rain %>%
+   gather(month,rain, -studyid, -country, -season_index, -seasonality_category) 
> rain2$month = gsub("_pre","",rain2$month)
> rain2$month = factor(rain2$month, levels=c("Jan", "Feb", "Mar", "Apr", "May","Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
> head(rain2)
        studyid      country seasonality_category season_index month  rain
1       CONTENT         Peru      Low seasonality    0.3696814   Jan 173.0
2        MAL-ED       Brazil      Low seasonality    0.3956979   Jan 245.2
3        MAL-ED         Peru      Low seasonality    0.4369334   Jan 210.4
4            EE     Pakistan   Medium seasonality    0.5440204   Jan  20.5
5        MAL-ED South Africa   Medium seasonality    0.5748634   Jan  74.4
6 Guatemala BSC    Guatemala   Medium seasonality    0.5788580   Jan  48.6
> 
> rain2$month_day = as.numeric(rain2$month) * 30.4167
> 
> 
> 
> 
> 
> #arrange cohorts by seasonality index and set factor levels
> rain2 <- rain2 %>% arrange(-season_index) %>% 
+   mutate(cohort = paste0(studyid, ", ", country),
+          cohort=factor(cohort, levels=unique(cohort))) 
> d <- d %>% mutate(cohort = paste0(studyid, ", ", country),
+                   cohort=factor(cohort, levels=unique(rain2$cohort)))
> 
> rain2 <- droplevels(rain2)
> cohorts=levels(rain2$cohort)
> 
> df <- d
> rain <- rain2
> cohort_name <- cohorts[[1]]
> 
> 
> 
> #Rain_plot function
> rain_plot <- function(df, rain, cohort_name, leftlab = c(1:9), rightlab = c(10:18)){
+   rain_sub <- filter(rain, cohort == cohort_name)
+   dsub <- filter(df, cohort == cohort_name)
+   
+   #add
+   cohort_name <- paste0(cohort_name," (", round(rain_sub$season_index[1],2),")")
+   
+   rainmax = max(rain_sub$rain)
+   
+   # estimate spline fit to mean z-scores by day of the year
+   fiti <- mgcv::gam(whz ~ s(jday, bs = "cr"), data = dsub)
+   newd <- data.frame(jday = 0:364)
+   # estimate approximate simultaneous confidence intervals
+   fitci <- gamCI(m = fiti, newdata = newd, nreps = 1000)
+   dfit <- data.frame(jday = 0:364, seasonality_category=rain_sub$seasonality_category[1], fit = fitci$fit, fit_se = fitci$se.fit, fit_lb = fitci$lwrS, fit_ub = fitci$uprS)
+   
+   shift<-min(dfit$fit_lb)
+   Zpeak<-ifelse(min(dfit$fit_lb)<0, abs(min(dfit$fit_lb)), max(dfit$fit_ub-shift))
+   conv_shift<-ifelse(min(dfit$fit_lb)<0, max(dfit$fit_ub), 0)
+   #shift<-max(dfit$fit_ub)
+   conversion_factor <- rainmax/(Zpeak+conv_shift)
+   #conv_shift<-ifelse(min(dfit$fit_lb)<0, min(dfit$fit_lb), 0)
+   #conversion_factor <- 577.9106
+   
+   summary(rain_sub$rain)
+   summary((dfit$fit-shift))
+   summary((dfit$fit-shift)*conversion_factor)
+   
+   if(i %in% leftlab){
+   p <- ggplot(rain_sub, aes(x=month, y=rain)) + geom_bar(stat='identity', width=0.5, alpha=0.5) +
+     geom_line(data = dfit, aes(x=(jday/365)*12+0.5, y=(fit-shift)*conversion_factor, color=seasonality_category), size=2) +
+     geom_ribbon(data = dfit, aes(x=(jday/365)*12+0.5,  
+                                  y=(fit-shift)*conversion_factor, 
+                                  ymin=(fit_lb-shift)*conversion_factor,  
+                                  ymax=(fit_ub-shift)*conversion_factor, 
+                                  color=NULL, fill=seasonality_category), alpha=0.3) +
+     scale_y_continuous(position = "right", expand = expand_scale(mult = c(0,0.1)), sec.axis = sec_axis(~(./(conversion_factor)+shift), name = "Mean WLZ")) +
+     ylab(NULL) + xlab(NULL) +
+     scale_fill_manual(values=tableau11[c(6,7,8)], drop=TRUE, limits = levels(rain$seasonality_category)) +
+     scale_color_manual(values=tableau11[c(6,7,8)], drop=TRUE, limits = levels(rain$seasonality_category)) +
+     scale_x_discrete(expand = c(0, 0), #breaks = 1:6*2, 
+                      labels = c("Jan.","", "Mar.","", "May","", "Jul.","", "Sep.","", "Nov.",""))+
+     ggtitle(cohort_name) + theme(legend.position = "none", plot.title = element_text(size = 12, face = "bold")) 
+   }
+   if(i %in% rightlab){
+     p <- ggplot(rain_sub, aes(x=month, y=rain)) + geom_bar(stat='identity', width=0.5, alpha=0.5) +
+       geom_line(data = dfit, aes(x=(jday/365)*12+0.5, y=(fit-shift)*conversion_factor, color=seasonality_category), size=2) +
+       geom_ribbon(data = dfit, aes(x=(jday/365)*12+0.5,  
+                                    y=(fit-shift)*conversion_factor, 
+                                    ymin=(fit_lb-shift)*conversion_factor,  
+                                    ymax=(fit_ub-shift)*conversion_factor, 
+                                    color=NULL, fill=seasonality_category), alpha=0.3) +
+       scale_y_continuous(position = "right", expand = expand_scale(mult = c(0,0.1)), sec.axis = sec_axis(~(./(conversion_factor)+shift), name = "")) +
+       ylab("Rainfall (mm)") + xlab(NULL) +
+       scale_fill_manual(values=tableau11[c(6,7,8)], drop=TRUE, limits = levels(rain$seasonality_category)) +
+       scale_color_manual(values=tableau11[c(6,7,8)], drop=TRUE, limits = levels(rain$seasonality_category)) +
+       scale_x_discrete(expand = c(0, 0), #breaks = 1:6*2, 
+                        labels = c("Jan.","", "Mar.","", "May","", "Jul.","", "Sep.","", "Nov.",""))+
+       ggtitle(cohort_name) + theme(legend.position = "none", plot.title = element_text(size = 12, face = "bold")) 
+   }
+   
+   if(!(i %in% leftlab | i %in% rightlab)){
+     p <- ggplot(rain_sub, aes(x=month, y=rain)) + geom_bar(stat='identity', width=0.5, alpha=0.5) +
+       geom_line(data = dfit, aes(x=(jday/365)*12+0.5, y=(fit-shift)*conversion_factor, color=seasonality_category), size=2) +
+       geom_ribbon(data = dfit, aes(x=(jday/365)*12+0.5,  
+                                    y=(fit-shift)*conversion_factor, 
+                                    ymin=(fit_lb-shift)*conversion_factor,  
+                                    ymax=(fit_ub-shift)*conversion_factor, 
+                                    color=NULL, fill=seasonality_category), alpha=0.3) +
+       scale_y_continuous(position = "right", expand = expand_scale(mult = c(0,0.1)), sec.axis = sec_axis(~(./(conversion_factor)+shift), name = "")) +
+       ylab("") + xlab(NULL) +
+       scale_fill_manual(values=tableau11[c(6,7,8)], drop=TRUE, limits = levels(rain$seasonality_category)) +
+       scale_color_manual(values=tableau11[c(6,7,8)], drop=TRUE, limits = levels(rain$seasonality_category)) +
+       scale_x_discrete(expand = c(0, 0), #breaks = 1:6*2, 
+                        labels = c("Jan.","", "Mar.","", "May","", "Jul.","", "Sep.","", "Nov.",""))+
+       ggtitle(cohort_name) + theme(legend.position = "none", plot.title = element_text(size = 12, face = "bold")) 
+   }
+   
+   return(p)
+ }
> 
> 
> #Get N's for caption
> Ns <- d %>% group_by(cohort) %>% summarize(nmeas=n(), nchild=length(unique(subjid)))
Warning message:
Factor `cohort` contains implicit NA, consider using `forcats::fct_explicit_na` 
> Ns
# A tibble: 18 x 3
   cohort                   nmeas nchild
   <fct>                    <int>  <int>
 1 Keneba, Gambia           40377   2923
 2 GMS-Nepal, Nepal         13480    698
 3 MAL-ED, Nepal             5703    240
 4 MAL-ED, Bangladesh        5608    265
 5 CMIN, Bangladesh          5400    279
 6 IRC, India                9807    410
 7 MAL-ED, India             5702    251
 8 CMC-V-BCS-2002, India     8736    373
 9 MAL-ED, Tanzania          5713    262
10 TanzaniaChild2, Tanzania 29596   2396
11 ResPak, Pakistan          3177    284
12 Guatemala BSC, Guatemala  2547    315
13 MAL-ED, South Africa      6164    314
14 EE, Pakistan              8543    380
15 MAL-ED, Peru              6143    303
16 MAL-ED, Brazil            4858    233
17 CONTENT, Peru             8339    215
18 <NA>                      9215    700
> Ns %>% summarize(min(nmeas), min(nchild), max(nmeas), max(nchild))
# A tibble: 1 x 4
  `min(nmeas)` `min(nchild)` `max(nmeas)` `max(nchild)`
         <int>         <int>        <int>         <int>
1         2547           215        40377          2923
> 
> 
> plot_list=list()
> for(i in 1:length(cohorts)){
+   print(cohorts[i])
+   plot_list[[i]] <- rain_plot(df=d, rain=rain2, cohort_name=cohorts[i])
+ }
[1] "Keneba, Gambia"
Warning: Ignoring unknown aesthetics: y
[1] "PROVIDE , Bangladesh"
Error in mgcv::gam(whz ~ s(jday, bs = "cr"), data = dsub) : 
  Not enough (non-NA) data to do anything meaningful
Calls: rain_plot -> <Anonymous>
Execution halted
