
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> #-----------------------------------------
> # Process data for wasting traj figures
> #-----------------------------------------
> rm(list=ls())
> source(paste0(here::here(), "/0-config.R"))
── Attaching packages ────────────────────────────────── tidyverse 1.3.0.9000 ──
✔ ggplot2 3.2.1     ✔ purrr   0.3.3
✔ tibble  2.1.3     ✔ dplyr   0.8.4
✔ tidyr   1.0.0     ✔ stringr 1.4.0
✔ readr   1.3.1     ✔ forcats 0.4.0
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
here() starts at /home/andrew.mertens/ki-longitudinal-manuscripts

Attaching package: ‘gridExtra’

The following object is masked from ‘package:dplyr’:

    combine


Attaching package: ‘reshape2’

The following object is masked from ‘package:tidyr’:

    smiths

Loading required package: Matrix

Attaching package: ‘Matrix’

The following objects are masked from ‘package:tidyr’:

    expand, pack, unpack

Loading 'metafor' package (version 2.1-0). For an overview 
and introduction to the package please type: help(metafor).

Attaching package: ‘data.table’

The following objects are masked from ‘package:reshape2’:

    dcast, melt

The following objects are masked from ‘package:dplyr’:

    between, first, last

The following object is masked from ‘package:purrr’:

    transpose

Loading required package: viridisLite

Attaching package: ‘maps’

The following object is masked from ‘package:purrr’:

    map


Attaching package: ‘ggridges’

The following object is masked from ‘package:ggplot2’:

    scale_discrete_manual


Attaching package: ‘assertthat’

The following object is masked from ‘package:tibble’:

    has_name

Loading required package: nlme

Attaching package: ‘nlme’

The following object is masked from ‘package:dplyr’:

    collapse

This is mgcv 1.8-30. For overview type 'help("mgcv-package")'.

Attaching package: ‘lazyeval’

The following objects are masked from ‘package:purrr’:

    is_atomic, is_formula


Attaching package: ‘rlang’

The following objects are masked from ‘package:lazyeval’:

    as_name, call_modify, call_standardise, expr_label, expr_text,
    f_env, f_env<-, f_label, f_lhs, f_lhs<-, f_rhs, f_rhs<-, f_text,
    is_atomic, is_call, is_formula, is_lang, is_pairlist, missing_arg

The following object is masked from ‘package:assertthat’:

    has_name

The following object is masked from ‘package:data.table’:

    :=

The following objects are masked from ‘package:purrr’:

    %@%, as_function, flatten, flatten_chr, flatten_dbl, flatten_int,
    flatten_lgl, flatten_raw, invoke, list_along, modify, prepend,
    splice


Attaching package: ‘scales’

The following object is masked from ‘package:viridis’:

    viridis_pal

The following object is masked from ‘package:purrr’:

    discard

The following object is masked from ‘package:readr’:

    col_factor


Attaching package: ‘foreach’

The following objects are masked from ‘package:purrr’:

    accumulate, when

Loading required package: iterators
Loading required package: parallel
Loading required package: survival

Attaching package: ‘survey’

The following object is masked from ‘package:graphics’:

    dotchart

Loading required package: bit
Attaching package bit
package:bit (c) 2008-2012 Jens Oehlschlaegel (GPL-2)
creators: bit bitwhich
coercion: as.logical as.integer as.bit as.bitwhich which
operator: ! & | xor != ==
querying: print length any all min max range sum summary
bit access: length<- [ [<- [[ [[<-
for more help type ?bit

Attaching package: ‘bit’

The following object is masked from ‘package:data.table’:

    setattr

The following object is masked from ‘package:base’:

    xor

Attaching package bit64
package:bit64 (c) 2011-2012 Jens Oehlschlaegel
creators: integer64 seq :
coercion: as.integer64 as.vector as.logical as.integer as.double as.character as.bin
logical operator: ! & | xor != == < <= >= >
arithmetic operator: + - * / %/% %% ^
math: sign abs sqrt log log2 log10
math: floor ceiling trunc round
querying: is.integer64 is.vector [is.atomic} [length] format print str
values: is.na is.nan is.finite is.infinite
aggregation: any all min max range sum prod
cumulation: diff cummin cummax cumsum cumprod
access: length<- [ [<- [[ [[<-
combine: c rep cbind rbind as.data.frame
WARNING don't use as subscripts
WARNING semantics differ from integer
for more help type ?bit64

Attaching package: ‘bit64’

The following object is masked from ‘package:bit’:

    still.identical

The following objects are masked from ‘package:base’:

    :, %in%, is.double, match, order, rank


Attaching package: ‘zoo’

The following objects are masked from ‘package:base’:

    as.Date, as.Date.numeric

Warning message:
New theme missing the following elements: line, rect, text, axis.title.x, axis.title.x.top, axis.title.y, axis.title.y.right, axis.text, axis.text.x, axis.text.x.top, axis.text.y, axis.text.y.right, axis.ticks, axis.ticks.length, axis.ticks.length.x, axis.ticks.length.x.top, axis.ticks.length.x.bottom, axis.ticks.length.y, axis.ticks.length.y.left, axis.ticks.length.y.right, axis.line, axis.line.x, axis.line.y, legend.background, legend.margin, legend.spacing, legend.spacing.x, legend.spacing.y, legend.key, legend.key.size, legend.key.height, legend.key.width, legend.text, legend.text.align, legend.title, legend.title.align, legend.position, legend.direction, legend.justification, legend.box, legend.box.margin, legend.box.background, legend.box.spacing, panel.background, panel.border, panel.spacing, panel.spacing.x, panel.spacing.y, panel.grid, panel.grid.minor, panel.ontop, plot.background, plot.title, plot.subtitle, plot.caption, plot.tag, plot.tag.position, plot.margin, strip.backgr [... truncated] 
> source(paste0(here::here(), "/0-project-functions/0_clean_study_data_functions.R"))
> 
> 
> 
> d <- readRDS(paste0(ghapdata_dir,"/seasonality_data.rds"))
> d <- d %>% filter(measurefreq=="monthly")
> 
> 
> d$region <- factor(d$region, levels=c("Africa", "Latin America", "South Asia"))
> 
> #Count number of children
> d %>% filter(agedays < 24 * 30.4167) %>%
+   group_by(studyid, country, subjid) %>% 
+   group_by(region) %>%
+   summarize(nobs=n(), nchild=length(unique(paste0(studyid, country, subjid))), nstudies = length(unique(paste0(studyid, country))))
# A tibble: 3 x 4
  region         nobs nchild nstudies
  <fct>         <int>  <int>    <int>
1 Africa        81850   5895        4
2 Latin America 21887   1066        4
3 South Asia    75371   3880       10
> 
> 
> d$cohort <- paste0(d$studyid, " ", d$country)
> length(unique(d$cohort))
[1] 18
> 
> d$month <- floor(d$jday/30.417) + 1
> table(d$month)

    1     2     3     4     5     6     7     8     9    10    11    12 
15154 14850 14939 14355 15004 14999 15292 15404 15279 15410 14920 13502 
> 
> #Monsoon is assumed to be May-October 
> d$monsoon <- factor(ifelse(d$month > 5 & d$month < 10, "Monsoon", "Not monsoon"))
> 
> 
> #Check if children are measured spread throughout the year by cohort
> # p <- ggplot(d, aes(x=jday, y=agedays)) + geom_smooth(aes(color=region), span=1, se=F, size=2) +
> #   facet_wrap(~cohort) 
> # p
> #Only GMS nepal has a group of children all measured at the same age throughout the year.
> 
> 
> p1 <- ggplot(d, aes(x=jday, y=whz)) + facet_wrap(~region, scales="free_y") + geom_smooth(aes(color=region), span=1, se=F, size=2) +
+   geom_smooth(aes(group=cohort), color="grey20", span=1, se=F,linetype=3, size=1) + xlab("Month of the year") + ylab("Mean WLZ") +
+   scale_color_manual(values=rep("grey20",3), drop=TRUE, limits = levels(d$region)) +
+   scale_x_continuous(limits=c(1,364), expand = c(0, 0),
+                      breaks = 1:6*30.41*2-50, labels = rep(c("Jan.", "Mar.", "May", "Jul.", "Sep.", "Nov."),1)) 
> 
> #-----------------------------------------
> # define standardized plot names
> #-----------------------------------------
> p1_name = create_name(
+   outcome = "wasting",
+   cutoff = 2,
+   measure = "mean",
+   population = "region-stratified",
+   location = "",
+   age = "All ages",
+   analysis = "seasonality"
+ )
> 
> # save plot and underlying data
> ggsave(p1, file=paste0(here(),"/figures/wasting/fig-",p1_name,".png"), width=6, height=3)
`geom_smooth()` using method = 'gam' and formula 'y ~ s(x, bs = "cs")'
`geom_smooth()` using method = 'gam' and formula 'y ~ s(x, bs = "cs")'
Warning messages:
1: Removed 921 rows containing non-finite values (stat_smooth). 
2: Removed 921 rows containing non-finite values (stat_smooth). 
> 
> 
> 
> d <- d %>% filter(region=="South Asia")
> d <- d[d$agedays<730,]
> 
> #Count number of children
> d %>% filter(agedays<=7) %>%
+   group_by(studyid, country, subjid) %>% slice(1) %>%
+   group_by(region) %>%
+   summarize(nchild=n(), nstudies = length(unique(paste0(studyid, country))))
# A tibble: 1 x 3
  region     nchild nstudies
  <fct>       <int>    <int>
1 South Asia   2334       10
> 
> 
> # estimate spline fit to mean z-scores by day of the year
> dsub = d[d$agedays<=7,]
> fiti <- mgcv::gam(whz ~ s(birthday, bs = "cr"), data = dsub)
> newd <- data.frame(birthday = 1:364)
> # estimate approximate simultaneous confidence intervals
> fitci <- gamCI(m = fiti, newdata = newd, nreps = 1000)
> dfit <- data.frame(birthday = 1:364,  fit = fitci$fit, fit_se = fitci$se.fit, fit_lb = fitci$lwrS, fit_ub = fitci$uprS)
> 
> p2 <- ggplot(data=dfit, aes(x=birthday, y=fit), color="grey20",  fill="grey20") +
+   geom_line(size=2) +
+   geom_ribbon(aes(ymin=fit_lb, ymax=fit_ub), alpha=0.3, color=NA) +
+   ylab("Mean WLZ") + xlab("Birth month") +
+   scale_y_continuous(breaks = c(-16:0)/10) +
+   scale_x_continuous(limits=c(1,364), expand = c(0, 0),
+                      breaks = 1:6*30.4167*2-50, labels = rep(c("Jan.", "Mar.", "May", "Jul.", "Sep.", "Nov."),1)) 
> p2
> 
> p2_name = create_name(
+   outcome = "wasting",
+   cutoff = 2,
+   measure = "mean",
+   population = "birth-stratified",
+   location = "South Asia",
+   age = "Birth",
+   analysis = "seasonality"
+ )
> 
> # save plot and underlying data
> ggsave(p2, file=paste0(here(),"/figures/wasting/fig-",p2_name,".png"), width=6, height=3)
> ggsave(p2, file=paste0(here(),"/figures/wasting/fig-",p2_name,"_V2.png"), width = 6, height = 5.2)
> 
> 
> 
> #mlen <- 30.417
> #d$birthcat <- cut(d$birthday+1, breaks=c(0, mlen*6, mlen*10, 365), labels=c("Born Jan-May","Born June-September","Born Oct-Dec"))
> d$birthcat <- cut(d$birthday+1, breaks=c(0, 91, 182, 273, 365), labels=c("Born Jan-Mar","Born Apr-June","Born Jul-Sept","Born Oct-Dec"))
> d <- d %>% group_by(birthcat) %>% mutate(meanZ=mean(whz), prev=mean(whz < -2))
> 
> #Mark each year and season
> d$studyyear <- factor(floor(d$studyday/365) + 1, labels = c("Year 1","Year 2","Year 3"))
> d$studyseason <- factor(interaction(d$studyyear, d$monsoon))
> 
> 
> #Annotation dataframe
> ann_text <- data.frame(studyday = c(1,3,5)*182, whz = -1.2, fit = -1.2, lab = c("Year 1","Year 2", "Year 3"),
+                        birthcat = factor("Born Oct-Dec",
+                                          #levels = c("Born Jan-Mar","Born Apr-June","Born Jul-Sept","Born Oct-Dec")))
+                                          levels = c("Born Jan-May","Born June-September","Born Oct-Dec")))
> 
> # Note: need to calculate WLZ change over seasons 
> # (Summarize in boxplots)
> d$season_change <- NA
> d$season_change[d$monsoon=="Not monsoon"] <- "Entering monsoon season"
> d$season_change[d$monsoon=="Monsoon"] <- "Leaving monsoon season"
> d$season_change <- factor(d$season_change, levels=c("Entering monsoon season", "Leaving monsoon season"))
> 
> #Make sure the inter-monsoon periods have the same category
> monsoon_timing <- d %>% group_by(monsoon, studyyear) %>% summarize(mean_age = mean(studyday))
> 
> d$studyseason <- as.character(d$studyseason)
> d$studyseason[d$studyseason=="Year 1.Not monsoon" & d$studyday > monsoon_timing$mean_age[1]] <- "Year 2.Not monsoon"
> d$studyseason[d$studyseason=="Year 2.Not monsoon" & d$studyday > monsoon_timing$mean_age[2]] <- "Year 3.Not monsoon"
> d$studyseason <- factor(d$studyseason)
> 
> #Create category to summarize mean WLZ based on season and birthcat
> d$studyseason_birthcat <- factor(interaction(d$studyseason, d$birthcat))
> table(d$studyseason_birthcat)

     Year 1.Monsoon.Born Jan-Mar  Year 1.Not monsoon.Born Jan-Mar 
                            2979                             3284 
     Year 2.Monsoon.Born Jan-Mar  Year 2.Not monsoon.Born Jan-Mar 
                            2532                             5581 
 Year 3.Not monsoon.Born Jan-Mar     Year 1.Monsoon.Born Apr-June 
                            2309                             3438 
Year 1.Not monsoon.Born Apr-June     Year 2.Monsoon.Born Apr-June 
                             578                             2619 
Year 2.Not monsoon.Born Apr-June     Year 3.Monsoon.Born Apr-June 
                            5678                               43 
Year 3.Not monsoon.Born Apr-June     Year 1.Monsoon.Born Jul-Sept 
                            3964                             2669 
    Year 2.Monsoon.Born Jul-Sept Year 2.Not monsoon.Born Jul-Sept 
                            4142                             8836 
    Year 3.Monsoon.Born Jul-Sept Year 3.Not monsoon.Born Jul-Sept 
                            1584                             7188 
     Year 2.Monsoon.Born Oct-Dec  Year 2.Not monsoon.Born Oct-Dec 
                            2907                             5504 
     Year 3.Monsoon.Born Oct-Dec  Year 3.Not monsoon.Born Oct-Dec 
                            2650                             6519 
> table(d$birthcat, d$studyseason)
               
                Year 1.Monsoon Year 1.Not monsoon Year 2.Monsoon
  Born Jan-Mar            2979               3284           2532
  Born Apr-June           3438                578           2619
  Born Jul-Sept           2669                  0           4142
  Born Oct-Dec               0                  0           2907
               
                Year 2.Not monsoon Year 3.Monsoon Year 3.Not monsoon
  Born Jan-Mar                5581              0               2309
  Born Apr-June               5678             43               3964
  Born Jul-Sept               8836           1584               7188
  Born Oct-Dec                5504           2650               6519
> 
> 
> 
> # estimate a pooled fit, over all birthcats
> plotdf <- NULL
> for(i in 1:length(levels(d$birthcat))){
+     cat=levels(d$birthcat)[i]
+     di <- filter(d, birthcat==cat)
+     fiti <- mgcv::gam(whz~s(studyday,bs="cr", k=10),data=di)
+     range=min(di$studyday):max(di$studyday)
+     agedays=1:(diff(range(range))+1)
+     newd <- data.frame(studyday=range)
+     fitci <- gamCI(m=fiti,newdata=newd,nreps=1000)
+     dfit <- data.frame(birthcat=cat,studyday=range, agedays=agedays,
+                        fit=fitci$fit,fit_se=fitci$se.fit,
+                        fit_lb=fitci$lwrS,fit_ub=fitci$uprS)
+     plotdf<-rbind(plotdf,dfit)
+   }
> 
> 
> 
> 
> #Add points at 6, 12, and 18 months
> plotdf$xpos <- plotdf$agem <- NA
> plotdf$xpos[plotdf$agedays %in% c(182, 365,548)] <- plotdf$studyday[plotdf$agedays %in% c(182, 365,548)]
> plotdf$agem[plotdf$agedays==182] <- "6 months"
> plotdf$agem[plotdf$agedays==365] <- "12 months"
> plotdf$agem[plotdf$agedays==548] <- "18 months"
> table(plotdf$xpos)

182 273 364 365 455 456 547 548 638 639 730 821 
  1   1   1   1   1   1   1   1   1   1   1   1 
> 
> #Add monsoon indicator to plot dataframe
> plotdf$month <- floor(plotdf$studyday/30.417) + 1
> plotdf$month[plotdf$month>12] <- plotdf$month[plotdf$month>12] - 12
> plotdf$month[plotdf$month>12] <- plotdf$month[plotdf$month>12] -12
> table(plotdf$month)

  1   2   3   4   5   6   7   8   9  10  11  12 
270 270 271 270 279 262 270 279 262 279 270 270 
> 
> #Monsoon is assumed to be May-October 
> plotdf$monsoon <- factor(ifelse(plotdf$month > 5 & plotdf$month < 10, "Monsoon", "Not monsoon"))
> 
> 
> 
> shade="grey80"
> 
> rectd=data.frame(x1=30.4617*c(5,17,29), x2=30.4617*c(10,22,34), y1=rep(-1.25, 3), y2=rep(0, 3))
> 
> p3 <- ggplot() +
+   geom_rect(data=rectd, mapping=aes(xmin=x1, xmax=x2, ymin=y1, ymax=y2), fill=shade, color=shade, alpha=1) +
+   geom_line(data=plotdf, aes(x=studyday, y=fit, group=birthcat, color=birthcat,  fill=birthcat), size=2) +
+   geom_ribbon(data=plotdf, aes(x=studyday, y=fit, ymin=fit_lb, ymax=fit_ub, group=birthcat, color=birthcat,  fill=birthcat), alpha=0.3, color=NA) +
+   scale_shape_manual(values=c(0,1,2), na.translate = F) +
+   scale_color_manual(values=tableau10[c(5,7,9,10)], na.translate = F) + 
+   scale_fill_manual(values=tableau10[c(5,7,9,10)], na.translate = F) + 
+   ylab("Mean WLZ") + xlab("Month of the year") +
+   scale_y_continuous(expand = c(0, 0)) +
+   scale_x_continuous(limits=c(1,1086), expand = c(0, 0),
+                      breaks = 1:18*30.41*2-50, labels = rep(c("Jan.", "Mar.", "May", "Jul.", "Sep.", "Nov."),3)) +
+   coord_cartesian(ylim=c(-1.25, 0)) +
+   guides(color=guide_legend(ncol=2)) + 
+   theme(legend.position = c(.78,.9),
+          legend.title = element_blank(),
+          legend.background = element_blank(),
+          legend.box.background = element_rect(colour = "black"),
+          legend.text=element_text(size=rel(1)))
Warning: Ignoring unknown aesthetics: fill
Warning: Ignoring unknown aesthetics: y
> 
> 
> # save plot and underlying data
> ggsave(p3, file=paste0(here(),"/figures/wasting/fig-birthmont-strat-seasonality-by-month.png"), width=8, height=5)
> 
> 
> 
> #Compare birth trajectories by child age rather than calendar time
> p4 <- ggplot() +
+   geom_line(data=plotdf, aes(x=agedays, y=fit, group=birthcat, color=birthcat,  fill=birthcat), size=2, linetype="solid") +
+   geom_ribbon(data=plotdf, aes(x=agedays, y=fit, ymin=fit_lb, ymax=fit_ub, group=birthcat, color=birthcat,  fill=birthcat), alpha=0.3, color=NA) +
+   scale_shape_manual(values=c(0,1,2), na.translate = F) +
+   scale_color_manual(values=tableau10[c(5,7,9,10)], na.translate = F) + 
+   scale_fill_manual(values=tableau10[c(5,7,9,10)], na.translate = F) + 
+   ylab("Mean WLZ") + xlab("Child age in months") +
+   scale_y_continuous(expand = c(0, 0)) +
+   scale_x_continuous(limits=c(1,730), expand = c(0, 0),
+                      breaks = 0:24*30.41, labels = 0:24) +
+   coord_cartesian(ylim=c(-1.25, 0)) +
+   guides(color=guide_legend(ncol=2)) + 
+   theme(legend.position = c(.78,.9),
+         legend.title = element_blank(),
+         legend.background = element_blank(),
+         legend.box.background = element_rect(colour = "black"),
+         legend.text=element_text(size=rel(1)))
Warning: Ignoring unknown aesthetics: fill
Warning: Ignoring unknown aesthetics: y
> 
> # save plot and underlying data
> ggsave(p4, file=paste0(here(),"/figures/wasting/fig-birthmont-strat-seasonality-by-age.png"), width=8, height=5)
Warning message:
Removed 332 rows containing missing values (geom_path). 
> 
> 
> #Save plot-objects
> saveRDS(list(p1, p2, p3, p4), file="U:/ki-longitudinal-manuscripts/figures/plot-objects/season_plots.rds")
Error in gzfile(file, mode) : cannot open the connection
Calls: saveRDS -> gzfile
In addition: Warning message:
In gzfile(file, mode) :
  cannot open compressed file 'U:/ki-longitudinal-manuscripts/figures/plot-objects/season_plots.rds', probable reason 'No such file or directory'
Execution halted
